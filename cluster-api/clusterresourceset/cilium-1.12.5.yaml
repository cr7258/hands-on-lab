---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/cilium-ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRY1BIMnFlV0VjanNqVm1TUFZpN1VKakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nakl4TWpJMk1ETXhOakl3V2hjTk1qVXhNakkxTURNeApOakl3V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRFQ3V29qMkZpSmwrb0g5bjNSQ0xJU0dvVENZVGx3c0hlamt3V0cxQVpjK0pqb0tWR00KSnFqNUpuU2Y2Um5jeFJBL3NrcDAwQi83N1VPVjlKbHU0ekVId2JBOFp2aDRuRnpveVJUTmtUZi9yYW92bWJYRwpmMU82WDAwQVc4YlVHZGJ4ekZpQ3ZheUdITFpZaER6TG9IMHMwdHRZUU44dDA2TFVsMndkdldlZG0rZHZIZ1crCm9wNnR4cGY5d3IvL2pxdncyb2t3VWd1enhFVHYwM3JLL1EwRitDanBVeTVWY01nY3Z2MkprRThuYTg3TFZNV0QKdU0waWdBZ2ZpSko1dmFRdlNUN1BZWWJ1UUkyT1NOZzQ2aDBlbjE1M2ZMYzV1eEMxV2VHdk1XekhGYkcyRTdLYwpiYlY3VXJUL1UrVjM0SDJZb296SExvaFEyTnZzdXNMU2lIKzNBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVV2eDBPdHBwOHp4TkFKb1Y0b04wRmtGNnV4NEF3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFES3B2amNhb2o3OVlUejUwSFgrWWtvcmNWMmUySUFjLzhtcGdCSzZOcFkzdnNlMFVKY3JDSHRuCkR3SHhTMGNyWE90YkpQcHh2dDZIVFFrSEx1b3E2R0tWUFdZb2VGU1gxWDlRbThQZDduTStJaTZkbGc4ZTdNTCsKNkplbytOYlF5T1pDQ1BiaHl2QmkrK1hneGRSRVJKQVJYVkxyL3d2cCtlOGI4RHlDejcwQ0lXR1Q5UjZ2d0NpNwpZVWdaTTNPaGplQ09SOVRtVyswRjNtaEVjR3ZnejRmRTMxODd5QmNXSUlMVU9JQSt2N0VWV2tYd1NBZWNCYnozCmZKeTFHWG5pYVA1MmNqd3M5YmhYMTZpUFUwWUtVenpmcEJzOHhWQUg5WnhwKzRhK2FHbU5sV0x6dDBOakZCb0kKZjdGREczV25NYjBhMlZKSnRWWSt0RC9SODVIZ2thST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMCsxcUk5aFlpWmZxQi9aOTBRaXlFaHFFd21FNWNMQjNvNU1GaHRRR1hQaVk2Q2xSCmpDYW8rU1owbitrWjNNVVFQN0pLZE5BZisrMURsZlNaYnVNeEI4R3dQR2I0ZUp4YzZNa1V6WkUzLzYycUw1bTEKeG45VHVsOU5BRnZHMUJuVzhjeFlncjJzaGh5MldJUTh5NkI5TE5MYldFRGZMZE9pMUpkc0hiMW5uWnZuYng0Rgp2cUtlcmNhWC9jSy8vNDZyOE5xSk1GSUxzOFJFNzlONnl2ME5CZmdvNlZNdVZYRElITDc5aVpCUEoydk95MVRGCmc3ak5Jb0FJSDRpU2ViMmtMMGsrejJHRzdrQ05qa2pZT09vZEhwOWVkM3kzT2JzUXRWbmhyekZzeHhXeHRoT3kKbkcyMWUxSzAvMVBsZCtCOW1LS014eTZJVU5qYjdMckMwb2gvdHdJREFRQUJBb0lCQVFEU0srZFJPU05GQVZWbApKRHpPYTFNOXhQTFlXdGMrUEtQSm91cWVOZk5CaklFSDdNSWt2Y3BobkpPWWF2SHRFYm4xa1hscHMyV2swRDV3Cm5xenpYWGlvZXB1dXEyZkxKVGEyM1lRMkFjaUpWYzhyZWNMZDRqUkU1bkpVNHEraWRTWEhrcUpNdHBJOFJvbEgKNjR6blhIZ0hWZTJWN20vbTRMWGhJM0pqWkEwNExTK21UWjlnUlJydVZjTGJoZmY4T1BFUHczeGJHb1lPWHYzawoxQ1YwdlR1TnFPQU9vU01sR2FTR1lDZlcxSkdOQVF4U0I2U25Ca3YxZVRPbC9saXFOUW9JZXY2bnFUZHN1eCtIClQ2bFJZN2pvcGFRTWZUOXE1OFc5NzhzTjZsdFhxQUNXeDBaZWxNc1l3RDhnZWF1WkxnWWxvZFB1d1JZeUVDUDIKVFJGeFErOXhBb0dCQVB5ejA1U1RMVmdXUmY1anJMNWRmVThtZlljRloyUkxKS0JTb2pDRm9RSFFZRzBTSlRrTwpJNEthNkhJNUd2Tm9lTU9VS3BtNGlTTUpMMGM3Mzl3N0JwT3RUTzJUVUsybGtPZVE3RXJiWlYrM0ZBRG1lSWlKCnE1Y1FnK014eVM1SDZ3M01aQkRRUGxrMVQ0cXZpSG40YWNPOGhmZ3hjSXRTUitDaTVaa0o1bFdqQW9HQkFOYXgKWUMyQ1VLL3RFeFNKRXlvYmthMHIxdFg2eGRoUlJ5c0g5VXIxN3pKMzBZUjJiZXp2Wm1FS0hHRHp5TDNuTWFadwp1aFBKc1k0ZVRpaEZWNGUxb3lRVjZueFlyNUkrVlM0eFMxQTlEUFdCOUx2MHVmMjBNd3hQcGhvYUtMUzNjbk8wCjErUGlQdWVCUHp1YnNWQW10elVOUnJJdjFUVTBiS3hrV2tmZ0FrYmRBb0dBSmxiR0YvbUlYSi9zZUo3NHUxMEYKd1BkdS9nZzAyb09JQ0FiaGNva2psMW5jOTA5VWRHYVB2cVh2OUR4enVWQTFXajdsZzdMNm8yVW1WaUZnWWxKVwpPaHVGMjFtSldQOFFrQUZ0eUNHbkxMRmpDSXZ1NTVBemgxVExIYklVK3IrUWl1UmluaVpwL3pEV1k0MGtJSlV1CnZyS2doTHBEZisrNDFmMEE1b29ZOXc4Q2dZQXpGblJIZ0FvSlF3WFdUaVFFVWhraE54eGhRTkpSZmszTUhKR3YKSzhTbW9zSjFuZVRjaTc4MStqejBpUzVNbWpaRFgvRzNnYmhCbEU2TzRLbEtmdHQ2VzhpM25EYnpPdWYwSFFESgo4QzBrUXE5bEJvQTNzZWl2MWtnMVQrSTkxcVZpaVRjU1lDVU4yOENiUTVvMjgyK0hMVWlVWURPQS9KK2JpaW05CmpyMmI5UUtCZ0R6NEhoVlR3WlY4NEIvOFhlUlJvVUtEM0ZCTzdBUmdxdnU0NWRhM1VPK1hmOUZycUgrK0dVdTMKb0Z6RTNFMDJnRHp0UWxUcjVPcHJRWjRYOG1rZEE4NVA3aVNORkRvNVlEOGlLWTNYUnEyakxpM0RPMkNnRjNRcwpjcm5vNmJDRmtqWUNwMm5Cd3h2TjhVWW1qUjBOUGVtM1M3VzJnYzFCNUI2bjJTeGFuSDl3Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble/tls-helm/ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-ca-secret
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRY1BIMnFlV0VjanNqVm1TUFZpN1VKakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nakl4TWpJMk1ETXhOakl3V2hjTk1qVXhNakkxTURNeApOakl3V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRFQ3V29qMkZpSmwrb0g5bjNSQ0xJU0dvVENZVGx3c0hlamt3V0cxQVpjK0pqb0tWR00KSnFqNUpuU2Y2Um5jeFJBL3NrcDAwQi83N1VPVjlKbHU0ekVId2JBOFp2aDRuRnpveVJUTmtUZi9yYW92bWJYRwpmMU82WDAwQVc4YlVHZGJ4ekZpQ3ZheUdITFpZaER6TG9IMHMwdHRZUU44dDA2TFVsMndkdldlZG0rZHZIZ1crCm9wNnR4cGY5d3IvL2pxdncyb2t3VWd1enhFVHYwM3JLL1EwRitDanBVeTVWY01nY3Z2MkprRThuYTg3TFZNV0QKdU0waWdBZ2ZpSko1dmFRdlNUN1BZWWJ1UUkyT1NOZzQ2aDBlbjE1M2ZMYzV1eEMxV2VHdk1XekhGYkcyRTdLYwpiYlY3VXJUL1UrVjM0SDJZb296SExvaFEyTnZzdXNMU2lIKzNBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVV2eDBPdHBwOHp4TkFKb1Y0b04wRmtGNnV4NEF3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFES3B2amNhb2o3OVlUejUwSFgrWWtvcmNWMmUySUFjLzhtcGdCSzZOcFkzdnNlMFVKY3JDSHRuCkR3SHhTMGNyWE90YkpQcHh2dDZIVFFrSEx1b3E2R0tWUFdZb2VGU1gxWDlRbThQZDduTStJaTZkbGc4ZTdNTCsKNkplbytOYlF5T1pDQ1BiaHl2QmkrK1hneGRSRVJKQVJYVkxyL3d2cCtlOGI4RHlDejcwQ0lXR1Q5UjZ2d0NpNwpZVWdaTTNPaGplQ09SOVRtVyswRjNtaEVjR3ZnejRmRTMxODd5QmNXSUlMVU9JQSt2N0VWV2tYd1NBZWNCYnozCmZKeTFHWG5pYVA1MmNqd3M5YmhYMTZpUFUwWUtVenpmcEJzOHhWQUg5WnhwKzRhK2FHbU5sV0x6dDBOakZCb0kKZjdGREczV25NYjBhMlZKSnRWWSt0RC9SODVIZ2thST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMCsxcUk5aFlpWmZxQi9aOTBRaXlFaHFFd21FNWNMQjNvNU1GaHRRR1hQaVk2Q2xSCmpDYW8rU1owbitrWjNNVVFQN0pLZE5BZisrMURsZlNaYnVNeEI4R3dQR2I0ZUp4YzZNa1V6WkUzLzYycUw1bTEKeG45VHVsOU5BRnZHMUJuVzhjeFlncjJzaGh5MldJUTh5NkI5TE5MYldFRGZMZE9pMUpkc0hiMW5uWnZuYng0Rgp2cUtlcmNhWC9jSy8vNDZyOE5xSk1GSUxzOFJFNzlONnl2ME5CZmdvNlZNdVZYRElITDc5aVpCUEoydk95MVRGCmc3ak5Jb0FJSDRpU2ViMmtMMGsrejJHRzdrQ05qa2pZT09vZEhwOWVkM3kzT2JzUXRWbmhyekZzeHhXeHRoT3kKbkcyMWUxSzAvMVBsZCtCOW1LS014eTZJVU5qYjdMckMwb2gvdHdJREFRQUJBb0lCQVFEU0srZFJPU05GQVZWbApKRHpPYTFNOXhQTFlXdGMrUEtQSm91cWVOZk5CaklFSDdNSWt2Y3BobkpPWWF2SHRFYm4xa1hscHMyV2swRDV3Cm5xenpYWGlvZXB1dXEyZkxKVGEyM1lRMkFjaUpWYzhyZWNMZDRqUkU1bkpVNHEraWRTWEhrcUpNdHBJOFJvbEgKNjR6blhIZ0hWZTJWN20vbTRMWGhJM0pqWkEwNExTK21UWjlnUlJydVZjTGJoZmY4T1BFUHczeGJHb1lPWHYzawoxQ1YwdlR1TnFPQU9vU01sR2FTR1lDZlcxSkdOQVF4U0I2U25Ca3YxZVRPbC9saXFOUW9JZXY2bnFUZHN1eCtIClQ2bFJZN2pvcGFRTWZUOXE1OFc5NzhzTjZsdFhxQUNXeDBaZWxNc1l3RDhnZWF1WkxnWWxvZFB1d1JZeUVDUDIKVFJGeFErOXhBb0dCQVB5ejA1U1RMVmdXUmY1anJMNWRmVThtZlljRloyUkxKS0JTb2pDRm9RSFFZRzBTSlRrTwpJNEthNkhJNUd2Tm9lTU9VS3BtNGlTTUpMMGM3Mzl3N0JwT3RUTzJUVUsybGtPZVE3RXJiWlYrM0ZBRG1lSWlKCnE1Y1FnK014eVM1SDZ3M01aQkRRUGxrMVQ0cXZpSG40YWNPOGhmZ3hjSXRTUitDaTVaa0o1bFdqQW9HQkFOYXgKWUMyQ1VLL3RFeFNKRXlvYmthMHIxdFg2eGRoUlJ5c0g5VXIxN3pKMzBZUjJiZXp2Wm1FS0hHRHp5TDNuTWFadwp1aFBKc1k0ZVRpaEZWNGUxb3lRVjZueFlyNUkrVlM0eFMxQTlEUFdCOUx2MHVmMjBNd3hQcGhvYUtMUzNjbk8wCjErUGlQdWVCUHp1YnNWQW10elVOUnJJdjFUVTBiS3hrV2tmZ0FrYmRBb0dBSmxiR0YvbUlYSi9zZUo3NHUxMEYKd1BkdS9nZzAyb09JQ0FiaGNva2psMW5jOTA5VWRHYVB2cVh2OUR4enVWQTFXajdsZzdMNm8yVW1WaUZnWWxKVwpPaHVGMjFtSldQOFFrQUZ0eUNHbkxMRmpDSXZ1NTVBemgxVExIYklVK3IrUWl1UmluaVpwL3pEV1k0MGtJSlV1CnZyS2doTHBEZisrNDFmMEE1b29ZOXc4Q2dZQXpGblJIZ0FvSlF3WFdUaVFFVWhraE54eGhRTkpSZmszTUhKR3YKSzhTbW9zSjFuZVRjaTc4MStqejBpUzVNbWpaRFgvRzNnYmhCbEU2TzRLbEtmdHQ2VzhpM25EYnpPdWYwSFFESgo4QzBrUXE5bEJvQTNzZWl2MWtnMVQrSTkxcVZpaVRjU1lDVU4yOENiUTVvMjgyK0hMVWlVWURPQS9KK2JpaW05CmpyMmI5UUtCZ0R6NEhoVlR3WlY4NEIvOFhlUlJvVUtEM0ZCTzdBUmdxdnU0NWRhM1VPK1hmOUZycUgrK0dVdTMKb0Z6RTNFMDJnRHp0UWxUcjVPcHJRWjRYOG1rZEE4NVA3aVNORkRvNVlEOGlLWTNYUnEyakxpM0RPMkNnRjNRcwpjcm5vNmJDRmtqWUNwMm5Cd3h2TjhVWW1qUjBOUGVtM1M3VzJnYzFCNUI2bjJTeGFuSDl3Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRY1BIMnFlV0VjanNqVm1TUFZpN1VKakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nakl4TWpJMk1ETXhOakl3V2hjTk1qVXhNakkxTURNeApOakl3V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRFQ3V29qMkZpSmwrb0g5bjNSQ0xJU0dvVENZVGx3c0hlamt3V0cxQVpjK0pqb0tWR00KSnFqNUpuU2Y2Um5jeFJBL3NrcDAwQi83N1VPVjlKbHU0ekVId2JBOFp2aDRuRnpveVJUTmtUZi9yYW92bWJYRwpmMU82WDAwQVc4YlVHZGJ4ekZpQ3ZheUdITFpZaER6TG9IMHMwdHRZUU44dDA2TFVsMndkdldlZG0rZHZIZ1crCm9wNnR4cGY5d3IvL2pxdncyb2t3VWd1enhFVHYwM3JLL1EwRitDanBVeTVWY01nY3Z2MkprRThuYTg3TFZNV0QKdU0waWdBZ2ZpSko1dmFRdlNUN1BZWWJ1UUkyT1NOZzQ2aDBlbjE1M2ZMYzV1eEMxV2VHdk1XekhGYkcyRTdLYwpiYlY3VXJUL1UrVjM0SDJZb296SExvaFEyTnZzdXNMU2lIKzNBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVV2eDBPdHBwOHp4TkFKb1Y0b04wRmtGNnV4NEF3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFES3B2amNhb2o3OVlUejUwSFgrWWtvcmNWMmUySUFjLzhtcGdCSzZOcFkzdnNlMFVKY3JDSHRuCkR3SHhTMGNyWE90YkpQcHh2dDZIVFFrSEx1b3E2R0tWUFdZb2VGU1gxWDlRbThQZDduTStJaTZkbGc4ZTdNTCsKNkplbytOYlF5T1pDQ1BiaHl2QmkrK1hneGRSRVJKQVJYVkxyL3d2cCtlOGI4RHlDejcwQ0lXR1Q5UjZ2d0NpNwpZVWdaTTNPaGplQ09SOVRtVyswRjNtaEVjR3ZnejRmRTMxODd5QmNXSUlMVU9JQSt2N0VWV2tYd1NBZWNCYnozCmZKeTFHWG5pYVA1MmNqd3M5YmhYMTZpUFUwWUtVenpmcEJzOHhWQUg5WnhwKzRhK2FHbU5sV0x6dDBOakZCb0kKZjdGREczV25NYjBhMlZKSnRWWSt0RC9SODVIZ2thST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWekNDQWorZ0F3SUJBZ0lSQUlvMis1SjV1cjhWNHdQaVBLNnBQQ1V3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl5TVRJeU5qQXpNVFl5TUZvWERUSTFNVEl5TlRBegpNVFl5TUZvd0tqRW9NQ1lHQTFVRUF3d2ZLaTVrWldaaGRXeDBMbWgxWW1Kc1pTMW5jbkJqTG1OcGJHbDFiUzVwCmJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU1sR0RlUlN1eGdSY1V4czRHamkKbmJTWEMwSHlzeDQ4K29jSE9OR2R2dDV3YzFRTTdZYkVwUnd1cEhTK3VNV1QyTmNyTzZvd3kvSzhZc3FLdTJOMApaSld3bTk5KzZ2UzJ2c3ZlRTR5RldZR3ZmVWIvUjJsaDhPblNYQTlMNXllZ29aNjY5VzhNcEhCUDU3M1NjWDM4Clp6cFJwa2tlbTZBS2FvK1Q3SllkQXJxMi8yZnN5a3dJampYbFkyb2J2RFp0YzU4bWFaT2VybDU5a0I3K1oxQzgKS21udWsrclp1UUM5QlJ1TEtMcXlUZUFuVVF4N0VQK1VmOERjQjBqYzBtRTVjUi9yZEtHT2g5NzI0NStoZTA4QwoyQ3NZYklLL0dkSnJ3MHJadDY1T2xQMXpMNGNTVldMVDJScm1SV1JIL0ZrbE1zUm1sL3RvbzVMSVVyTFFUNHZaClJ1Y0NBd0VBQWFPQmpUQ0JpakFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUgKQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVXZ4ME90cHA4enhOQQpKb1Y0b04wRmtGNnV4NEF3S2dZRFZSMFJCQ013SVlJZktpNWtaV1poZFd4MExtaDFZbUpzWlMxbmNuQmpMbU5wCmJHbDFiUzVwYnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWo5dko4bFJUYlBpdkpZZ1RON1BneFA5S0NjY1AKNXJOM2xhUEZQYUJsWWxxNzlqcTFsajN4VEhLb1hQblR0NDIyTWU3amhWdE9ZMklmOE9JVjlQaFdKRGNMNG5VbgpEY2FaeUx2ckM4QWhJcmhWNFE1M2svUWdBNE9tM1BVdGRCd0IyQmxTajdFT3JFNk5acURwSElObk1qWndRcW01Cll6MmxTVklsSkw4N3Nma3FXc2x4Uk1mcW5YWGt4Q3d1aHYwSGdESExIWGQvTkJPb1B6VkJtOW9BRkxKNFlLbTgKVURBNVIwZjRBRE0zRG9HbnV0clpyeCtvVUVnbFgxaS9KOEdlL3R4aEx2NnFRSnljVnVhOWk1TStxRzA1eEhtMAp6VkRYM05NU3hBVHhDdkR4MERFajBRNUNzaHJKRTBycHhJd2FlUGZRUHVXRjhUd3hMelhvWW1LVU9nPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeVVZTjVGSzdHQkZ4VEd6Z2FPS2R0SmNMUWZLekhqejZod2M0MFoyKzNuQnpWQXp0CmhzU2xIQzZrZEw2NHhaUFkxeXM3cWpETDhyeGl5b3E3WTNSa2xiQ2IzMzdxOUxhK3k5NFRqSVZaZ2E5OVJ2OUgKYVdIdzZkSmNEMHZuSjZDaG5ycjFid3lrY0UvbnZkSnhmZnhuT2xHbVNSNmJvQXBxajVQc2xoMEN1cmIvWit6SwpUQWlPTmVWamFodThObTF6bnlacGs1NnVYbjJRSHY1blVMd3FhZTZUNnRtNUFMMEZHNHNvdXJKTjRDZFJESHNRCi81Ui93TndIU056U1lUbHhIK3Qwb1k2SDN2YmpuNkY3VHdMWUt4aHNncjhaMG12RFN0bTNyazZVL1hNdmh4SlYKWXRQWkd1WkZaRWY4V1NVeXhHYVgrMmlqa3NoU3N0QlBpOWxHNXdJREFRQUJBb0lCQUhvOEVrbTh1S1ZJU28rSQplODBXKzRIbVRVN3l6emNvLzFrcjJLVHM4VEwwQmdaZ2g0eFdOcFBqKzdwdTdaWUlVU056dlJ1QjRRcDh3RjZUClhIUnRCbjBtTWJQTXgzSnczWFRBWFF6MUcwTzRTUlBxQ3Z1RUlLUlFQZHFJVlV6cXI5elBYQ2poKzZlOXoxYW4KekljZjE2MUNVd09MRkNaZ3pSQi9YS3BaMmdONzlMK0FaRVk5WklFRERqc0pLelBPQ3E1TXR3a2xHZFpPdUR0Tgpqc2xHMDFadWI1RllMQXc2SG9aV2FDRkllMnAyMnRwdDFMT3pOYXRPNW5lVFg1S2d6Y0libG84SEdqQmFYazR4CmR3YVErYzVhaEZRaS9xZGpmakMvc3JjMC9zNGNubG03WlFIS3F5RXJGanhuVUhUVTlCYzdUUXZqZDZjY0RMcm0KRmtZVGtUa0NnWUVBenR5RU41a0V3TzJuc28wQWg4MWt2WitNMmVwbU1CZG03M3RoME14Y2hpU1I0eTg0bTh2bwpMNWd5UDJoRFRIUkdRZ21iTjVYR0hrdnFuNk52NVNKcjlpTlZubkRCY1MyWHgxTWRZejhpREhJbExXTkl3MmkzCm9PY2NiYVZTTlpBeVN1c1E0Nmp4YlBiY2plOUVSbmEySVI1TTJRNU9MOHpZa1Ywb09jcmZneDBDZ1lFQStSVzkKbDdmMmxFKzJHL1MxaWZ6N05xWXFzblBkeWhIYWhGbmRIUHFsejVOeENvei93SU1qMEd3a0h2a3FtTVJGdVV2cwp0bUdYMUJxV3l0UzczMFRCbXIzMFp1NndWR3ljSUc1WmkzODFwcGhIck05Y3pDUkozNzFiYjZ0WncrdHRZdmhlCjdCTU1BeUlNa0R0S1NpcTRjSExwaGZnNGtEbUNOTmppSnVhRkx0TUNnWUVBd2J5dnErNkpFRFBFWXFwQ08rMzIKa3MzU09lbVpDU054eVlyUndwOFRiS0xsYTFPM2ZkcU1PNzhjR0Z5SzR4am5FRVEwOWVzMUlQelM0ZTVOQnRtbApLV0pRZHRKOXFZVWM2SmFFS0laaFdpeXhldi9JanhNTklBb3ppdEZSM0U2UGU3RUtJVjRCdHA3QlU4RXFQYUJDCjFXT3ViMzlCWk8xQ1MycG5HVEZUQWxVQ2dZRUFzaUpITGJyRm9IbUZQbWI2Y1kyM3h2UjlNcFJFZUYvZVM2ck0KeEEzSkNUTmpzMnowOXFPU3VGcXVWbXhSZDJGZWo4N3BvZUVYcVB1Ky9aMjRJa3RVdmlxOUgrUHh2TjdUcFNubAo1aXA2bndMbXQ0S3cxZG5aN3lYSHY0dm1yWU92L2dpc01kN0pSM0JSVmREaEp6dDRIZ3RBVUt3ZEg1L1JLNlF6CjBDZ3A5VHNDZ1lCR2Vvb055aDZmdzZ6TGg1WmNxTmxQUUdrVGxoWTFZQXBnZloxRi9vRktFeGRQdG1lUGtQZnkKOUJHSG4yVUZFYWpvZCtwdnVwVGk5RlNXOU1qdVdhN3JvVU1lZUFOSHhIclN5ZGFaYzgzd283cmE2dy9JdUZQYgpaTTdTQ2w4NCtQUEhVVnVubnhDcjcxOFRvTktKUi9aUUo2NVNEeFlZUENIYjE1eWVpclU1QWc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  skip-cnp-status-startup-clean: "false"
  # Disable the usage of CiliumEndpoint CRD
  disable-endpoint-crd: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/policy/intro/#policy-enforcement-modes
  enable-policy: "default"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "true"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: 5s

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0) of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  # bpf-lb-bypass-fib-lookup instructs Cilium to enable the FIB lookup bypass
  # optimization for nodeport reverse NAT handling.
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: default
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "0"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  tunnel: "vxlan"
  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv6-masquerade: "true"

  enable-xt-socket-fallback: "true"
  install-iptables-rules: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "false"
  enable-local-redirect-policy: "false"

  kube-proxy-replacement: "disabled"
  bpf-lb-sock: "false"
  enable-health-check-nodeport: "true"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  enable-svc-source-range-check: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  synchronize-k8s-nodes: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: "/var/run/cilium/hubble.sock"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "cluster-pool"
  cluster-pool-ipv4-cidr: "10.0.0.0/8"
  cluster-pool-ipv4-mask-size: "24"
  disable-cnp-status-updates: "true"
  enable-vtep: "false"
  vtep-endpoint: ""
  vtep-cidr: ""
  vtep-mask: ""
  vtep-mac: ""
  enable-bgp-control-plane: "false"
  procfs: "/host/proc"
  bpf-root: "/sys/fs/bpf"
  cgroup-root: "/run/cilium/cgroupv2"
  enable-k8s-terminating-endpoint: "true"
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  tofqdns-dns-reject-response-code: "refused"
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: "0s"
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: "100ms"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumbgploadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumegressnatpolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  # To synchronize garbage collection of such resources
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
  - create
  - update
  - deletecollection
  # To update the status of the CNPs and CCNPs
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  # Update the auto-generated CNPs and CCNPs status.
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  # To perform garbage collection of such resources
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  # To synchronize garbage collection of such resources
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
    # To perform CiliumNode garbage collector
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
  resourceNames:
  - ciliumbgploadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumegressnatpolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: kube-system
  labels:
    k8s-app: cilium
spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  internalTrafficPolicy: Local
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # Set app AppArmor's profile to "unconfined". The value of this annotation
        # can be modified as long users know which profiles they have available
        # in AppArmor.
        container.apparmor.security.beta.kubernetes.io/cilium-agent: "unconfined"
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: "unconfined"
        container.apparmor.security.beta.kubernetes.io/mount-cgroup: "unconfined"
        container.apparmor.security.beta.kubernetes.io/apply-sysctl-overwrites: "unconfined"
      labels:
        k8s-app: cilium
    spec:
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.12.5@sha256:06ce2b0a0a472e73334a7504ee5c5d8b2e2d7b72ef728ad94e564740dd505be5"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cni-chaining-mode
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: custom-cni-conf
              optional: true
        lifecycle:
          postStart:
            exec:
              command:
              - "/cni-install.sh"
              - "--enable-debug=false"
              - "--cni-exclusive=true"
              - "--log-file=/var/run/cilium/cilium-cni.log"
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        securityContext:
          seLinuxOptions:
            level: 's0'
            # Running with spc_t since we have removed the privileged mode.
            # Users can change it to a different type as long as they have the
            # type available on the system.
            type: 'spc_t'
          capabilities:
            add:
              # Use to set socket permission
              - CHOWN
              # Used to terminate envoy child process
              - KILL
              # Used since cilium modifies routing tables, etc...
              - NET_ADMIN
              # Used since cilium creates raw sockets, etc...
              - NET_RAW
              # Used since cilium monitor uses mmap
              - IPC_LOCK
              # Used in iptables. Consider removing once we are iptables-free
              - SYS_MODULE
              # We need it for now but might not need it for >= 5.11 specially
              # for the 'SYS_RESOURCE'.
              # In >= 5.8 there's already BPF and PERMON capabilities
              - SYS_ADMIN
              # Could be an alternative for the SYS_ADMIN for the RLIMIT_NPROC
              - SYS_RESOURCE
              # Both PERFMON and BPF requires kernel 5.8, container runtime
              # cri-o >= v1.22.0 or containerd >= v1.5.0.
              # If available, SYS_ADMIN can be removed.
              #- PERFMON
              #- BPF
              - DAC_OVERRIDE
              - FOWNER
              - SETGID
              - SETUID
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        # Unprivileged containers need to mount /proc/sys/net from the host
        # to have write access
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        # Unprivileged containers need to mount /proc/sys/kernel from the host
        # to have write access
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Unprivileged containers can't set mount propagation to bidirectional
          # in this case we will mount the bpf fs from an init container that
          # is privileged and set the mount propagation from host to container
          # in Cilium.
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: cni-path
          mountPath: /host/opt/cni/bin
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
      initContainers:
      # Required to mount cgroup2 filesystem on the underlying Kubernetes node.
      # We use nsenter command with host's cgroup and mount namespaces enabled.
      - name: mount-cgroup
        image: "quay.io/cilium/cilium:v1.12.5@sha256:06ce2b0a0a472e73334a7504ee5c5d8b2e2d7b72ef728ad94e564740dd505be5"
        imagePullPolicy: IfNotPresent
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh and mount that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: 's0'
            # Running with spc_t since we have removed the privileged mode.
            # Users can change it to a different type as long as they have the
            # type available on the system.
            type: 'spc_t'
          capabilities:
            drop:
              - ALL
            add:
              # Only used for 'mount' cgroup
              - SYS_ADMIN
              # Used for nsenter
              - SYS_CHROOT
              - SYS_PTRACE
      - name: apply-sysctl-overwrites
        image: "quay.io/cilium/cilium:v1.12.5@sha256:06ce2b0a0a472e73334a7504ee5c5d8b2e2d7b72ef728ad94e564740dd505be5"
        imagePullPolicy: IfNotPresent
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: 's0'
            # Running with spc_t since we have removed the privileged mode.
            # Users can change it to a different type as long as they have the
            # type available on the system.
            type: 'spc_t'
          capabilities:
            drop:
              - ALL
            add:
              # Required in order to access host's /etc/sysctl.d dir
              - SYS_ADMIN
              # Used for nsenter
              - SYS_CHROOT
              - SYS_PTRACE
      # Mount the bpf fs if it is not mounted. We will perform this task
      # from a privileged container because the mount propagation bidirectional
      # only works from privileged containers.
      - name: mount-bpf-fs
        image: "quay.io/cilium/cilium:v1.12.5@sha256:06ce2b0a0a472e73334a7504ee5c5d8b2e2d7b72ef728ad94e564740dd505be5"
        imagePullPolicy: IfNotPresent
        args:
        - 'mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf'
        command:
        - /bin/bash
        - -c
        - --
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.12.5@sha256:06ce2b0a0a472e73334a7504ee5c5d8b2e2d7b72ef728ad94e564740dd505be5"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: 's0'
            # Running with spc_t since we have removed the privileged mode.
            # Users can change it to a different type as long as they have the
            # type available on the system.
            type: 'spc_t'
          capabilities:
            # Most of the capabilities here are the same ones used in the
            # cilium-agent's container because this container can be used to
            # uninstall all Cilium resources, and therefore it is likely that
            # will need the same capabilities.
            add:
              # Used since cilium modifies routing tables, etc...
              - NET_ADMIN
              # Used in iptables. Consider removing once we are iptables-free
              - SYS_MODULE
              # We need it for now but might not need it for >= 5.11 specially
              # for the 'SYS_RESOURCE'.
              # In >= 5.8 there's already BPF and PERMON capabilities
              - SYS_ADMIN
              # Could be an alternative for the SYS_ADMIN for the RLIMIT_NPROC
              - SYS_RESOURCE
              # Both PERFMON and BPF requires kernel 5.8, container runtime
              # cri-o >= v1.22.0 or containerd >= v1.5.0.
              # If available, SYS_ADMIN can be removed.
              #- PERFMON
              #- BPF
            drop:
              - ALL
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        resources:
          requests:
            cpu: 100m
            memory: 100Mi # wait-for-kube-proxy
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To mount cgroup2 filesystem on the host
      - name: hostproc
        hostPath:
          path: /proc
          type: Directory
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        secret:
          secretName: cilium-clustermesh
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          optional: true
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
      - name: host-proc-sys-net
        hostPath:
          path: /proc/sys/net
          type: Directory
      - name: host-proc-sys-kernel
        hostPath:
          path: /proc/sys/kernel
          type: Directory
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        io.cilium/app: operator
        name: cilium-operator
    spec:
      containers:
      - name: cilium-operator
        image: "quay.io/cilium/operator-generic:v1.12.5@sha256:b296eb7f0f7656a5cc19724f40a8a7121b7fd725278b7d61dc91fe0b7ffd7c0e"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
