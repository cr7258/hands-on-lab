# myapp   0/4     Pending   0          0s
# the pod has not been scheduled yet
apiVersion: v1
kind: Pod
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"name":"myapp","namespace":"default"},"spec":{"containers":[{"args":["echo \"main container 1 is starting...\"\nwhile true; do\n  echo \"main container 1 is doing some tasks...\"\n  sleep 3\ndone\n"],"command":["sh","-c"],"image":"busybox:1.35","name":"main-container-1"},{"args":["echo \"main container 2 is starting...\"\nwhile true; do\n  echo \"main container 2 is doing some tasks...\"\n  sleep 3\ndone\n"],"command":["sh","-c"],"image":"busybox:1.35","name":"main-container-2"}],"initContainers":[{"args":["echo \"init container 1 is starting...\"\necho \"init container 1 is doing some tasks...\"\nsleep 10\necho \"init container 1 completed tasks and exited\"\n"],"command":["sh","-c"],"image":"busybox:1.35","name":"init-container-1"},{"args":["echo \"sidecar container 1 is starting...\"\necho \"sidecar container 1 is doing some tasks...\"\nsleep 20\necho \"sidecar container 1 completed tasks and exited\"\n"],"command":["sh","-c"],"image":"busybox:1.35","name":"sidecar-container-1","restartPolicy":"Always"},{"args":["echo \"sidecar container 2 is starting...\"\necho \"sidecar container 2 is doing some tasks...\"\nsleep 30\necho \"sidecar container 2 completed tasks and exited\"\n"],"command":["sh","-c"],"image":"busybox:1.35","name":"sidecar-container-2","restartPolicy":"Always"}]}}
  creationTimestamp: "2024-05-28T23:46:16Z"
  name: myapp
  namespace: default
  resourceVersion: "1218269"
  uid: ba31885d-3d8d-44f2-89f4-2b06ab3984d2
spec:
  containers:
    - args:
        - |
          echo "main container 1 is starting..."
          while true; do
            echo "main container 1 is doing some tasks..."
            sleep 3
          done
      command:
        - sh
        - -c
      image: busybox:1.35
      imagePullPolicy: IfNotPresent
      name: main-container-1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-kgcf9
          readOnly: true
    - args:
        - |
          echo "main container 2 is starting..."
          while true; do
            echo "main container 2 is doing some tasks..."
            sleep 3
          done
      command:
        - sh
        - -c
      image: busybox:1.35
      imagePullPolicy: IfNotPresent
      name: main-container-2
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-kgcf9
          readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  initContainers:
    - args:
        - |
          echo "init container 1 is starting..."
          echo "init container 1 is doing some tasks..."
          sleep 10
          echo "init container 1 completed tasks and exited"
      command:
        - sh
        - -c
      image: busybox:1.35
      imagePullPolicy: IfNotPresent
      name: init-container-1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-kgcf9
          readOnly: true
    - args:
        - |
          echo "sidecar container 1 is starting..."
          echo "sidecar container 1 is doing some tasks..."
          sleep 20
          echo "sidecar container 1 completed tasks and exited"
      command:
        - sh
        - -c
      image: busybox:1.35
      imagePullPolicy: IfNotPresent
      name: sidecar-container-1
      resources: {}
      restartPolicy: Always
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-kgcf9
          readOnly: true
    - args:
        - |
          echo "sidecar container 2 is starting..."
          echo "sidecar container 2 is doing some tasks..."
          sleep 30
          echo "sidecar container 2 completed tasks and exited"
      command:
        - sh
        - -c
      image: busybox:1.35
      imagePullPolicy: IfNotPresent
      name: sidecar-container-2
      resources: {}
      restartPolicy: Always
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-kgcf9
          readOnly: true
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 30
  tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
  volumes:
    - name: kube-api-access-kgcf9
      projected:
        defaultMode: 420
        sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
                - key: ca.crt
                  path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
                - fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
                  path: namespace
status:
  phase: Pending
  qosClass: BestEffort

# myapp   0/4     Pending   0          0s
# the pod has been scheduled but didn't initialize containers
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"name":"myapp","namespace":"default"},"spec":{"containers":[{"args":["echo \"main container 1 is starting...\"\nwhile true; do\n  echo \"main container 1 is doing some tasks...\"\n  sleep 3\ndone\n"],"command":["sh","-c"],"image":"busybox:1.35","name":"main-container-1"},{"args":["echo \"main container 2 is starting...\"\nwhile true; do\n  echo \"main container 2 is doing some tasks...\"\n  sleep 3\ndone\n"],"command":["sh","-c"],"image":"busybox:1.35","name":"main-container-2"}],"initContainers":[{"args":["echo \"init container 1 is starting...\"\necho \"init container 1 is doing some tasks...\"\nsleep 10\necho \"init container 1 completed tasks and exited\"\n"],"command":["sh","-c"],"image":"busybox:1.35","name":"init-container-1"},{"args":["echo \"sidecar container 1 is starting...\"\necho \"sidecar container 1 is doing some tasks...\"\nsleep 20\necho \"sidecar container 1 completed tasks and exited\"\n"],"command":["sh","-c"],"image":"busybox:1.35","name":"sidecar-container-1","restartPolicy":"Always"},{"args":["echo \"sidecar container 2 is starting...\"\necho \"sidecar container 2 is doing some tasks...\"\nsleep 30\necho \"sidecar container 2 completed tasks and exited\"\n"],"command":["sh","-c"],"image":"busybox:1.35","name":"sidecar-container-2","restartPolicy":"Always"}]}}
  creationTimestamp: "2024-05-28T23:46:16Z"
  name: myapp
  namespace: default
  resourceVersion: "1218270"
  uid: ba31885d-3d8d-44f2-89f4-2b06ab3984d2
spec:
  containers:
    - args:
        - |
          echo "main container 1 is starting..."
          while true; do
            echo "main container 1 is doing some tasks..."
            sleep 3
          done
      command:
        - sh
        - -c
      image: busybox:1.35
      imagePullPolicy: IfNotPresent
      name: main-container-1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-kgcf9
          readOnly: true
    - args:
        - |
          echo "main container 2 is starting..."
          while true; do
            echo "main container 2 is doing some tasks..."
            sleep 3
          done
      command:
        - sh
        - -c
      image: busybox:1.35
      imagePullPolicy: IfNotPresent
      name: main-container-2
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-kgcf9
          readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  initContainers:
    - args:
        - |
          echo "init container 1 is starting..."
          echo "init container 1 is doing some tasks..."
          sleep 10
          echo "init container 1 completed tasks and exited"
      command:
        - sh
        - -c
      image: busybox:1.35
      imagePullPolicy: IfNotPresent
      name: init-container-1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-kgcf9
          readOnly: true
    - args:
        - |
          echo "sidecar container 1 is starting..."
          echo "sidecar container 1 is doing some tasks..."
          sleep 20
          echo "sidecar container 1 completed tasks and exited"
      command:
        - sh
        - -c
      image: busybox:1.35
      imagePullPolicy: IfNotPresent
      name: sidecar-container-1
      resources: {}
      restartPolicy: Always
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-kgcf9
          readOnly: true
    - args:
        - |
          echo "sidecar container 2 is starting..."
          echo "sidecar container 2 is doing some tasks..."
          sleep 30
          echo "sidecar container 2 completed tasks and exited"
      command:
        - sh
        - -c
      image: busybox:1.35
      imagePullPolicy: IfNotPresent
      name: sidecar-container-2
      resources: {}
      restartPolicy: Always
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-kgcf9
          readOnly: true
  nodeName: sidecar-demo-cluster-control-plane
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 30
  tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
  volumes:
    - name: kube-api-access-kgcf9
      projected:
        defaultMode: 420
        sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
                - key: ca.crt
                  path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
                - fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
                  path: namespace
status:
  conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-05-28T23:46:16Z"
      status: "True"
      type: PodScheduled
  phase: Pending
  qosClass: BestEffort

# myapp   0/4     Init:0/3   0          0s
# waiting for the init-container-1 to be created
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"name":"myapp","namespace":"default"},"spec":{"containers":[{"args":["echo \"main container 1 is starting...\"\nwhile true; do\n  echo \"main container 1 is doing some tasks...\"\n  sleep 3\ndone\n"],"command":["sh","-c"],"image":"busybox:1.35","name":"main-container-1"},{"args":["echo \"main container 2 is starting...\"\nwhile true; do\n  echo \"main container 2 is doing some tasks...\"\n  sleep 3\ndone\n"],"command":["sh","-c"],"image":"busybox:1.35","name":"main-container-2"}],"initContainers":[{"args":["echo \"init container 1 is starting...\"\necho \"init container 1 is doing some tasks...\"\nsleep 10\necho \"init container 1 completed tasks and exited\"\n"],"command":["sh","-c"],"image":"busybox:1.35","name":"init-container-1"},{"args":["echo \"sidecar container 1 is starting...\"\necho \"sidecar container 1 is doing some tasks...\"\nsleep 20\necho \"sidecar container 1 completed tasks and exited\"\n"],"command":["sh","-c"],"image":"busybox:1.35","name":"sidecar-container-1","restartPolicy":"Always"},{"args":["echo \"sidecar container 2 is starting...\"\necho \"sidecar container 2 is doing some tasks...\"\nsleep 30\necho \"sidecar container 2 completed tasks and exited\"\n"],"command":["sh","-c"],"image":"busybox:1.35","name":"sidecar-container-2","restartPolicy":"Always"}]}}
  creationTimestamp: "2024-05-28T23:46:16Z"
  name: myapp
  namespace: default
  resourceVersion: "1218272"
  uid: ba31885d-3d8d-44f2-89f4-2b06ab3984d2
spec:
  containers:
    - args:
        - |
          echo "main container 1 is starting..."
          while true; do
            echo "main container 1 is doing some tasks..."
            sleep 3
          done
      command:
        - sh
        - -c
      image: busybox:1.35
      imagePullPolicy: IfNotPresent
      name: main-container-1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-kgcf9
          readOnly: true
    - args:
        - |
          echo "main container 2 is starting..."
          while true; do
            echo "main container 2 is doing some tasks..."
            sleep 3
          done
      command:
        - sh
        - -c
      image: busybox:1.35
      imagePullPolicy: IfNotPresent
      name: main-container-2
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-kgcf9
          readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  initContainers:
    - args:
        - |
          echo "init container 1 is starting..."
          echo "init container 1 is doing some tasks..."
          sleep 10
          echo "init container 1 completed tasks and exited"
      command:
        - sh
        - -c
      image: busybox:1.35
      imagePullPolicy: IfNotPresent
      name: init-container-1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-kgcf9
          readOnly: true
    - args:
        - |
          echo "sidecar container 1 is starting..."
          echo "sidecar container 1 is doing some tasks..."
          sleep 20
          echo "sidecar container 1 completed tasks and exited"
      command:
        - sh
        - -c
      image: busybox:1.35
      imagePullPolicy: IfNotPresent
      name: sidecar-container-1
      resources: {}
      restartPolicy: Always
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-kgcf9
          readOnly: true
    - args:
        - |
          echo "sidecar container 2 is starting..."
          echo "sidecar container 2 is doing some tasks..."
          sleep 30
          echo "sidecar container 2 completed tasks and exited"
      command:
        - sh
        - -c
      image: busybox:1.35
      imagePullPolicy: IfNotPresent
      name: sidecar-container-2
      resources: {}
      restartPolicy: Always
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-kgcf9
          readOnly: true
  nodeName: sidecar-demo-cluster-control-plane
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 30
  tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
  volumes:
    - name: kube-api-access-kgcf9
      projected:
        defaultMode: 420
        sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
                - key: ca.crt
                  path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
                - fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
                  path: namespace
status:
  conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-05-28T23:46:16Z"
      message: 'containers with incomplete status: [init-container-1 sidecar-container-1
      sidecar-container-2]'
      reason: ContainersNotInitialized
      status: "False"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-05-28T23:46:16Z"
      message: 'containers with unready status: [sidecar-container-1 sidecar-container-2
      main-container-1 main-container-2]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-05-28T23:46:16Z"
      message: 'containers with unready status: [sidecar-container-1 sidecar-container-2
      main-container-1 main-container-2]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-05-28T23:46:16Z"
      status: "True"
      type: PodScheduled
  containerStatuses:
    - image: busybox:1.35
      imageID: ""
      lastState: {}
      name: main-container-1
      ready: false
      restartCount: 0
      started: false
      state:
        waiting:
          reason: PodInitializing
    - image: busybox:1.35
      imageID: ""
      lastState: {}
      name: main-container-2
      ready: false
      restartCount: 0
      started: false
      state:
        waiting:
          reason: PodInitializing
  hostIP: 172.19.0.2
  initContainerStatuses:
    - image: busybox:1.35
      imageID: ""
      lastState: {}
      name: init-container-1
      ready: false
      restartCount: 0
      started: false
      state:
        waiting:
          reason: PodInitializing
    - image: busybox:1.35
      imageID: ""
      lastState: {}
      name: sidecar-container-1
      ready: false
      restartCount: 0
      started: false
      state:
        waiting:
          reason: PodInitializing
    - image: busybox:1.35
      imageID: ""
      lastState: {}
      name: sidecar-container-2
      ready: false
      restartCount: 0
      started: false
      state:
        waiting:
          reason: PodInitializing
  phase: Pending
  qosClass: BestEffort
  startTime: "2024-05-28T23:46:16Z"

# myapp   0/4     Init:0/3   0          1s
# the init-container-1 is running but doesn't complete yet
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"name":"myapp","namespace":"default"},"spec":{"containers":[{"args":["echo \"main container 1 is starting...\"\nwhile true; do\n  echo \"main container 1 is doing some tasks...\"\n  sleep 3\ndone\n"],"command":["sh","-c"],"image":"busybox:1.35","name":"main-container-1"},{"args":["echo \"main container 2 is starting...\"\nwhile true; do\n  echo \"main container 2 is doing some tasks...\"\n  sleep 3\ndone\n"],"command":["sh","-c"],"image":"busybox:1.35","name":"main-container-2"}],"initContainers":[{"args":["echo \"init container 1 is starting...\"\necho \"init container 1 is doing some tasks...\"\nsleep 10\necho \"init container 1 completed tasks and exited\"\n"],"command":["sh","-c"],"image":"busybox:1.35","name":"init-container-1"},{"args":["echo \"sidecar container 1 is starting...\"\necho \"sidecar container 1 is doing some tasks...\"\nsleep 20\necho \"sidecar container 1 completed tasks and exited\"\n"],"command":["sh","-c"],"image":"busybox:1.35","name":"sidecar-container-1","restartPolicy":"Always"},{"args":["echo \"sidecar container 2 is starting...\"\necho \"sidecar container 2 is doing some tasks...\"\nsleep 30\necho \"sidecar container 2 completed tasks and exited\"\n"],"command":["sh","-c"],"image":"busybox:1.35","name":"sidecar-container-2","restartPolicy":"Always"}]}}
  creationTimestamp: "2024-05-28T23:46:16Z"
  name: myapp
  namespace: default
  resourceVersion: "1218276"
  uid: ba31885d-3d8d-44f2-89f4-2b06ab3984d2
spec:
  containers:
    - args:
        - |
          echo "main container 1 is starting..."
          while true; do
            echo "main container 1 is doing some tasks..."
            sleep 3
          done
      command:
        - sh
        - -c
      image: busybox:1.35
      imagePullPolicy: IfNotPresent
      name: main-container-1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-kgcf9
          readOnly: true
    - args:
        - |
          echo "main container 2 is starting..."
          while true; do
            echo "main container 2 is doing some tasks..."
            sleep 3
          done
      command:
        - sh
        - -c
      image: busybox:1.35
      imagePullPolicy: IfNotPresent
      name: main-container-2
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-kgcf9
          readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  initContainers:
    - args:
        - |
          echo "init container 1 is starting..."
          echo "init container 1 is doing some tasks..."
          sleep 10
          echo "init container 1 completed tasks and exited"
      command:
        - sh
        - -c
      image: busybox:1.35
      imagePullPolicy: IfNotPresent
      name: init-container-1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-kgcf9
          readOnly: true
    - args:
        - |
          echo "sidecar container 1 is starting..."
          echo "sidecar container 1 is doing some tasks..."
          sleep 20
          echo "sidecar container 1 completed tasks and exited"
      command:
        - sh
        - -c
      image: busybox:1.35
      imagePullPolicy: IfNotPresent
      name: sidecar-container-1
      resources: {}
      restartPolicy: Always
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-kgcf9
          readOnly: true
    - args:
        - |
          echo "sidecar container 2 is starting..."
          echo "sidecar container 2 is doing some tasks..."
          sleep 30
          echo "sidecar container 2 completed tasks and exited"
      command:
        - sh
        - -c
      image: busybox:1.35
      imagePullPolicy: IfNotPresent
      name: sidecar-container-2
      resources: {}
      restartPolicy: Always
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-kgcf9
          readOnly: true
  nodeName: sidecar-demo-cluster-control-plane
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 30
  tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
  volumes:
    - name: kube-api-access-kgcf9
      projected:
        defaultMode: 420
        sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
                - key: ca.crt
                  path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
                - fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
                  path: namespace
status:
  conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-05-28T23:46:16Z"
      message: 'containers with incomplete status: [init-container-1 sidecar-container-1
      sidecar-container-2]'
      reason: ContainersNotInitialized
      status: "False"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-05-28T23:46:16Z"
      message: 'containers with unready status: [sidecar-container-1 sidecar-container-2
      main-container-1 main-container-2]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-05-28T23:46:16Z"
      message: 'containers with unready status: [sidecar-container-1 sidecar-container-2
      main-container-1 main-container-2]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-05-28T23:46:16Z"
      status: "True"
      type: PodScheduled
  containerStatuses:
    - image: busybox:1.35
      imageID: ""
      lastState: {}
      name: main-container-1
      ready: false
      restartCount: 0
      started: false
      state:
        waiting:
          reason: PodInitializing
    - image: busybox:1.35
      imageID: ""
      lastState: {}
      name: main-container-2
      ready: false
      restartCount: 0
      started: false
      state:
        waiting:
          reason: PodInitializing
  hostIP: 172.19.0.2
  initContainerStatuses:
    - containerID: containerd://4bae1e77a0ea4477c1efc488a34fd066dd915fdbc3866cecfad0966336c941a1
      image: docker.io/library/busybox:1.35
      imageID: docker.io/library/busybox@sha256:469d6089bc898ead80a47dab258a127ffdae15342eab860be3be9ed2acdee33b
      lastState: {}
      name: init-container-1
      ready: false
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-05-28T23:46:16Z"
    - image: busybox:1.35
      imageID: ""
      lastState: {}
      name: sidecar-container-1
      ready: false
      restartCount: 0
      started: false
      state:
        waiting:
          reason: PodInitializing
    - image: busybox:1.35
      imageID: ""
      lastState: {}
      name: sidecar-container-2
      ready: false
      restartCount: 0
      started: false
      state:
        waiting:
          reason: PodInitializing
  phase: Pending
  podIP: 10.244.0.13
  podIPs:
    - ip: 10.244.0.13
  qosClass: BestEffort
  startTime: "2024-05-28T23:46:16Z"

# myapp   0/4     Init:1/3   0          11s
# the init-container-1 completed and exited, waiting for the sidecar-container-1 to be created
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"name":"myapp","namespace":"default"},"spec":{"containers":[{"args":["echo \"main container 1 is starting...\"\nwhile true; do\n  echo \"main container 1 is doing some tasks...\"\n  sleep 3\ndone\n"],"command":["sh","-c"],"image":"busybox:1.35","name":"main-container-1"},{"args":["echo \"main container 2 is starting...\"\nwhile true; do\n  echo \"main container 2 is doing some tasks...\"\n  sleep 3\ndone\n"],"command":["sh","-c"],"image":"busybox:1.35","name":"main-container-2"}],"initContainers":[{"args":["echo \"init container 1 is starting...\"\necho \"init container 1 is doing some tasks...\"\nsleep 10\necho \"init container 1 completed tasks and exited\"\n"],"command":["sh","-c"],"image":"busybox:1.35","name":"init-container-1"},{"args":["echo \"sidecar container 1 is starting...\"\necho \"sidecar container 1 is doing some tasks...\"\nsleep 20\necho \"sidecar container 1 completed tasks and exited\"\n"],"command":["sh","-c"],"image":"busybox:1.35","name":"sidecar-container-1","restartPolicy":"Always"},{"args":["echo \"sidecar container 2 is starting...\"\necho \"sidecar container 2 is doing some tasks...\"\nsleep 30\necho \"sidecar container 2 completed tasks and exited\"\n"],"command":["sh","-c"],"image":"busybox:1.35","name":"sidecar-container-2","restartPolicy":"Always"}]}}
  creationTimestamp: "2024-05-28T23:46:16Z"
  name: myapp
  namespace: default
  resourceVersion: "1218291"
  uid: ba31885d-3d8d-44f2-89f4-2b06ab3984d2
spec:
  containers:
    - args:
        - |
          echo "main container 1 is starting..."
          while true; do
            echo "main container 1 is doing some tasks..."
            sleep 3
          done
      command:
        - sh
        - -c
      image: busybox:1.35
      imagePullPolicy: IfNotPresent
      name: main-container-1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-kgcf9
          readOnly: true
    - args:
        - |
          echo "main container 2 is starting..."
          while true; do
            echo "main container 2 is doing some tasks..."
            sleep 3
          done
      command:
        - sh
        - -c
      image: busybox:1.35
      imagePullPolicy: IfNotPresent
      name: main-container-2
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-kgcf9
          readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  initContainers:
    - args:
        - |
          echo "init container 1 is starting..."
          echo "init container 1 is doing some tasks..."
          sleep 10
          echo "init container 1 completed tasks and exited"
      command:
        - sh
        - -c
      image: busybox:1.35
      imagePullPolicy: IfNotPresent
      name: init-container-1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-kgcf9
          readOnly: true
    - args:
        - |
          echo "sidecar container 1 is starting..."
          echo "sidecar container 1 is doing some tasks..."
          sleep 20
          echo "sidecar container 1 completed tasks and exited"
      command:
        - sh
        - -c
      image: busybox:1.35
      imagePullPolicy: IfNotPresent
      name: sidecar-container-1
      resources: {}
      restartPolicy: Always
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-kgcf9
          readOnly: true
    - args:
        - |
          echo "sidecar container 2 is starting..."
          echo "sidecar container 2 is doing some tasks..."
          sleep 30
          echo "sidecar container 2 completed tasks and exited"
      command:
        - sh
        - -c
      image: busybox:1.35
      imagePullPolicy: IfNotPresent
      name: sidecar-container-2
      resources: {}
      restartPolicy: Always
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-kgcf9
          readOnly: true
  nodeName: sidecar-demo-cluster-control-plane
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 30
  tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
  volumes:
    - name: kube-api-access-kgcf9
      projected:
        defaultMode: 420
        sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
                - key: ca.crt
                  path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
                - fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
                  path: namespace
status:
  conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-05-28T23:46:16Z"
      message: 'containers with incomplete status: [sidecar-container-1 sidecar-container-2]'
      reason: ContainersNotInitialized
      status: "False"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-05-28T23:46:16Z"
      message: 'containers with unready status: [sidecar-container-1 sidecar-container-2
      main-container-1 main-container-2]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-05-28T23:46:16Z"
      message: 'containers with unready status: [sidecar-container-1 sidecar-container-2
      main-container-1 main-container-2]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-05-28T23:46:16Z"
      status: "True"
      type: PodScheduled
  containerStatuses:
    - image: busybox:1.35
      imageID: ""
      lastState: {}
      name: main-container-1
      ready: false
      restartCount: 0
      started: false
      state:
        waiting:
          reason: PodInitializing
    - image: busybox:1.35
      imageID: ""
      lastState: {}
      name: main-container-2
      ready: false
      restartCount: 0
      started: false
      state:
        waiting:
          reason: PodInitializing
  hostIP: 172.19.0.2
  initContainerStatuses:
    - containerID: containerd://4bae1e77a0ea4477c1efc488a34fd066dd915fdbc3866cecfad0966336c941a1
      image: docker.io/library/busybox:1.35
      imageID: docker.io/library/busybox@sha256:469d6089bc898ead80a47dab258a127ffdae15342eab860be3be9ed2acdee33b
      lastState: {}
      name: init-container-1
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://4bae1e77a0ea4477c1efc488a34fd066dd915fdbc3866cecfad0966336c941a1
          exitCode: 0
          finishedAt: "2024-05-28T23:46:26Z"
          reason: Completed
          startedAt: "2024-05-28T23:46:16Z"
    - image: busybox:1.35
      imageID: ""
      lastState: {}
      name: sidecar-container-1
      ready: false
      restartCount: 0
      started: false
      state:
        waiting:
          reason: PodInitializing
    - image: busybox:1.35
      imageID: ""
      lastState: {}
      name: sidecar-container-2
      ready: false
      restartCount: 0
      started: false
      state:
        waiting:
          reason: PodInitializing
  phase: Pending
  podIP: 10.244.0.13
  podIPs:
    - ip: 10.244.0.13
  qosClass: BestEffort
  startTime: "2024-05-28T23:46:16Z"

# myapp   1/4     Init:2/3   0          12s
# the sidecar-container-1 is running, waiting for the sidecar-container-2 to be created
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"name":"myapp","namespace":"default"},"spec":{"containers":[{"args":["echo \"main container 1 is starting...\"\nwhile true; do\n  echo \"main container 1 is doing some tasks...\"\n  sleep 3\ndone\n"],"command":["sh","-c"],"image":"busybox:1.35","name":"main-container-1"},{"args":["echo \"main container 2 is starting...\"\nwhile true; do\n  echo \"main container 2 is doing some tasks...\"\n  sleep 3\ndone\n"],"command":["sh","-c"],"image":"busybox:1.35","name":"main-container-2"}],"initContainers":[{"args":["echo \"init container 1 is starting...\"\necho \"init container 1 is doing some tasks...\"\nsleep 10\necho \"init container 1 completed tasks and exited\"\n"],"command":["sh","-c"],"image":"busybox:1.35","name":"init-container-1"},{"args":["echo \"sidecar container 1 is starting...\"\necho \"sidecar container 1 is doing some tasks...\"\nsleep 20\necho \"sidecar container 1 completed tasks and exited\"\n"],"command":["sh","-c"],"image":"busybox:1.35","name":"sidecar-container-1","restartPolicy":"Always"},{"args":["echo \"sidecar container 2 is starting...\"\necho \"sidecar container 2 is doing some tasks...\"\nsleep 30\necho \"sidecar container 2 completed tasks and exited\"\n"],"command":["sh","-c"],"image":"busybox:1.35","name":"sidecar-container-2","restartPolicy":"Always"}]}}
  creationTimestamp: "2024-05-28T23:46:16Z"
  name: myapp
  namespace: default
  resourceVersion: "1218297"
  uid: ba31885d-3d8d-44f2-89f4-2b06ab3984d2
spec:
  containers:
    - args:
        - |
          echo "main container 1 is starting..."
          while true; do
            echo "main container 1 is doing some tasks..."
            sleep 3
          done
      command:
        - sh
        - -c
      image: busybox:1.35
      imagePullPolicy: IfNotPresent
      name: main-container-1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-kgcf9
          readOnly: true
    - args:
        - |
          echo "main container 2 is starting..."
          while true; do
            echo "main container 2 is doing some tasks..."
            sleep 3
          done
      command:
        - sh
        - -c
      image: busybox:1.35
      imagePullPolicy: IfNotPresent
      name: main-container-2
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-kgcf9
          readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  initContainers:
    - args:
        - |
          echo "init container 1 is starting..."
          echo "init container 1 is doing some tasks..."
          sleep 10
          echo "init container 1 completed tasks and exited"
      command:
        - sh
        - -c
      image: busybox:1.35
      imagePullPolicy: IfNotPresent
      name: init-container-1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-kgcf9
          readOnly: true
    - args:
        - |
          echo "sidecar container 1 is starting..."
          echo "sidecar container 1 is doing some tasks..."
          sleep 20
          echo "sidecar container 1 completed tasks and exited"
      command:
        - sh
        - -c
      image: busybox:1.35
      imagePullPolicy: IfNotPresent
      name: sidecar-container-1
      resources: {}
      restartPolicy: Always
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-kgcf9
          readOnly: true
    - args:
        - |
          echo "sidecar container 2 is starting..."
          echo "sidecar container 2 is doing some tasks..."
          sleep 30
          echo "sidecar container 2 completed tasks and exited"
      command:
        - sh
        - -c
      image: busybox:1.35
      imagePullPolicy: IfNotPresent
      name: sidecar-container-2
      resources: {}
      restartPolicy: Always
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-kgcf9
          readOnly: true
  nodeName: sidecar-demo-cluster-control-plane
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 30
  tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
  volumes:
    - name: kube-api-access-kgcf9
      projected:
        defaultMode: 420
        sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
                - key: ca.crt
                  path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
                - fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
                  path: namespace
status:
  conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-05-28T23:46:16Z"
      message: 'containers with incomplete status: [sidecar-container-2]'
      reason: ContainersNotInitialized
      status: "False"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-05-28T23:46:16Z"
      message: 'containers with unready status: [sidecar-container-2 main-container-1
      main-container-2]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-05-28T23:46:16Z"
      message: 'containers with unready status: [sidecar-container-2 main-container-1
      main-container-2]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-05-28T23:46:16Z"
      status: "True"
      type: PodScheduled
  containerStatuses:
    - image: busybox:1.35
      imageID: ""
      lastState: {}
      name: main-container-1
      ready: false
      restartCount: 0
      started: false
      state:
        waiting:
          reason: PodInitializing
    - image: busybox:1.35
      imageID: ""
      lastState: {}
      name: main-container-2
      ready: false
      restartCount: 0
      started: false
      state:
        waiting:
          reason: PodInitializing
  hostIP: 172.19.0.2
  initContainerStatuses:
    - containerID: containerd://4bae1e77a0ea4477c1efc488a34fd066dd915fdbc3866cecfad0966336c941a1
      image: docker.io/library/busybox:1.35
      imageID: docker.io/library/busybox@sha256:469d6089bc898ead80a47dab258a127ffdae15342eab860be3be9ed2acdee33b
      lastState: {}
      name: init-container-1
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://4bae1e77a0ea4477c1efc488a34fd066dd915fdbc3866cecfad0966336c941a1
          exitCode: 0
          finishedAt: "2024-05-28T23:46:26Z"
          reason: Completed
          startedAt: "2024-05-28T23:46:16Z"
    - containerID: containerd://3a71b3d8b8f32916aa6bfee057d65e3449603b81e8001dc75eb5256800e13882
      image: docker.io/library/busybox:1.35
      imageID: docker.io/library/busybox@sha256:469d6089bc898ead80a47dab258a127ffdae15342eab860be3be9ed2acdee33b
      lastState: {}
      name: sidecar-container-1
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-05-28T23:46:27Z"
    - image: busybox:1.35
      imageID: ""
      lastState: {}
      name: sidecar-container-2
      ready: false
      restartCount: 0
      started: false
      state:
        waiting:
          reason: PodInitializing
  phase: Pending
  podIP: 10.244.0.13
  podIPs:
    - ip: 10.244.0.13
  qosClass: BestEffort
  startTime: "2024-05-28T23:46:16Z"


# myapp   2/4     PodInitializing   0          13s
# the sidecar-container-2 is running, waiting for the main-container-1 and main-container-2 to be created
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"name":"myapp","namespace":"default"},"spec":{"containers":[{"args":["echo \"main container 1 is starting...\"\nwhile true; do\n  echo \"main container 1 is doing some tasks...\"\n  sleep 3\ndone\n"],"command":["sh","-c"],"image":"busybox:1.35","name":"main-container-1"},{"args":["echo \"main container 2 is starting...\"\nwhile true; do\n  echo \"main container 2 is doing some tasks...\"\n  sleep 3\ndone\n"],"command":["sh","-c"],"image":"busybox:1.35","name":"main-container-2"}],"initContainers":[{"args":["echo \"init container 1 is starting...\"\necho \"init container 1 is doing some tasks...\"\nsleep 10\necho \"init container 1 completed tasks and exited\"\n"],"command":["sh","-c"],"image":"busybox:1.35","name":"init-container-1"},{"args":["echo \"sidecar container 1 is starting...\"\necho \"sidecar container 1 is doing some tasks...\"\nsleep 20\necho \"sidecar container 1 completed tasks and exited\"\n"],"command":["sh","-c"],"image":"busybox:1.35","name":"sidecar-container-1","restartPolicy":"Always"},{"args":["echo \"sidecar container 2 is starting...\"\necho \"sidecar container 2 is doing some tasks...\"\nsleep 30\necho \"sidecar container 2 completed tasks and exited\"\n"],"command":["sh","-c"],"image":"busybox:1.35","name":"sidecar-container-2","restartPolicy":"Always"}]}}
  creationTimestamp: "2024-05-28T23:46:16Z"
  name: myapp
  namespace: default
  resourceVersion: "1218302"
  uid: ba31885d-3d8d-44f2-89f4-2b06ab3984d2
spec:
  containers:
    - args:
        - |
          echo "main container 1 is starting..."
          while true; do
            echo "main container 1 is doing some tasks..."
            sleep 3
          done
      command:
        - sh
        - -c
      image: busybox:1.35
      imagePullPolicy: IfNotPresent
      name: main-container-1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-kgcf9
          readOnly: true
    - args:
        - |
          echo "main container 2 is starting..."
          while true; do
            echo "main container 2 is doing some tasks..."
            sleep 3
          done
      command:
        - sh
        - -c
      image: busybox:1.35
      imagePullPolicy: IfNotPresent
      name: main-container-2
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-kgcf9
          readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  initContainers:
    - args:
        - |
          echo "init container 1 is starting..."
          echo "init container 1 is doing some tasks..."
          sleep 10
          echo "init container 1 completed tasks and exited"
      command:
        - sh
        - -c
      image: busybox:1.35
      imagePullPolicy: IfNotPresent
      name: init-container-1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-kgcf9
          readOnly: true
    - args:
        - |
          echo "sidecar container 1 is starting..."
          echo "sidecar container 1 is doing some tasks..."
          sleep 20
          echo "sidecar container 1 completed tasks and exited"
      command:
        - sh
        - -c
      image: busybox:1.35
      imagePullPolicy: IfNotPresent
      name: sidecar-container-1
      resources: {}
      restartPolicy: Always
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-kgcf9
          readOnly: true
    - args:
        - |
          echo "sidecar container 2 is starting..."
          echo "sidecar container 2 is doing some tasks..."
          sleep 30
          echo "sidecar container 2 completed tasks and exited"
      command:
        - sh
        - -c
      image: busybox:1.35
      imagePullPolicy: IfNotPresent
      name: sidecar-container-2
      resources: {}
      restartPolicy: Always
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-kgcf9
          readOnly: true
  nodeName: sidecar-demo-cluster-control-plane
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 30
  tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
  volumes:
    - name: kube-api-access-kgcf9
      projected:
        defaultMode: 420
        sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
                - key: ca.crt
                  path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
                - fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
                  path: namespace
status:
  conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-05-28T23:46:29Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-05-28T23:46:16Z"
      message: 'containers with unready status: [main-container-1 main-container-2]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-05-28T23:46:16Z"
      message: 'containers with unready status: [main-container-1 main-container-2]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-05-28T23:46:16Z"
      status: "True"
      type: PodScheduled
  containerStatuses:
    - image: busybox:1.35
      imageID: ""
      lastState: {}
      name: main-container-1
      ready: false
      restartCount: 0
      started: false
      state:
        waiting:
          reason: PodInitializing
    - image: busybox:1.35
      imageID: ""
      lastState: {}
      name: main-container-2
      ready: false
      restartCount: 0
      started: false
      state:
        waiting:
          reason: PodInitializing
  hostIP: 172.19.0.2
  initContainerStatuses:
    - containerID: containerd://4bae1e77a0ea4477c1efc488a34fd066dd915fdbc3866cecfad0966336c941a1
      image: docker.io/library/busybox:1.35
      imageID: docker.io/library/busybox@sha256:469d6089bc898ead80a47dab258a127ffdae15342eab860be3be9ed2acdee33b
      lastState: {}
      name: init-container-1
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://4bae1e77a0ea4477c1efc488a34fd066dd915fdbc3866cecfad0966336c941a1
          exitCode: 0
          finishedAt: "2024-05-28T23:46:26Z"
          reason: Completed
          startedAt: "2024-05-28T23:46:16Z"
    - containerID: containerd://3a71b3d8b8f32916aa6bfee057d65e3449603b81e8001dc75eb5256800e13882
      image: docker.io/library/busybox:1.35
      imageID: docker.io/library/busybox@sha256:469d6089bc898ead80a47dab258a127ffdae15342eab860be3be9ed2acdee33b
      lastState: {}
      name: sidecar-container-1
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-05-28T23:46:27Z"
    - containerID: containerd://ec0861a00729f5f3eb6325bbfb2f01599e8a88d0a67d02fb35b09e6dab5de1b5
      image: docker.io/library/busybox:1.35
      imageID: docker.io/library/busybox@sha256:469d6089bc898ead80a47dab258a127ffdae15342eab860be3be9ed2acdee33b
      lastState: {}
      name: sidecar-container-2
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-05-28T23:46:28Z"
  phase: Pending
  podIP: 10.244.0.13
  podIPs:
    - ip: 10.244.0.13
  qosClass: BestEffort
  startTime: "2024-05-28T23:46:16Z"

# myapp   4/4     Running           0          14s
# the main-container-1 and main-container-2 are running
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"name":"myapp","namespace":"default"},"spec":{"containers":[{"args":["echo \"main container 1 is starting...\"\nwhile true; do\n  echo \"main container 1 is doing some tasks...\"\n  sleep 3\ndone\n"],"command":["sh","-c"],"image":"busybox:1.35","name":"main-container-1"},{"args":["echo \"main container 2 is starting...\"\nwhile true; do\n  echo \"main container 2 is doing some tasks...\"\n  sleep 3\ndone\n"],"command":["sh","-c"],"image":"busybox:1.35","name":"main-container-2"}],"initContainers":[{"args":["echo \"init container 1 is starting...\"\necho \"init container 1 is doing some tasks...\"\nsleep 10\necho \"init container 1 completed tasks and exited\"\n"],"command":["sh","-c"],"image":"busybox:1.35","name":"init-container-1"},{"args":["echo \"sidecar container 1 is starting...\"\necho \"sidecar container 1 is doing some tasks...\"\nsleep 20\necho \"sidecar container 1 completed tasks and exited\"\n"],"command":["sh","-c"],"image":"busybox:1.35","name":"sidecar-container-1","restartPolicy":"Always"},{"args":["echo \"sidecar container 2 is starting...\"\necho \"sidecar container 2 is doing some tasks...\"\nsleep 30\necho \"sidecar container 2 completed tasks and exited\"\n"],"command":["sh","-c"],"image":"busybox:1.35","name":"sidecar-container-2","restartPolicy":"Always"}]}}
  creationTimestamp: "2024-05-28T23:46:16Z"
  name: myapp
  namespace: default
  resourceVersion: "1218312"
  uid: ba31885d-3d8d-44f2-89f4-2b06ab3984d2
spec:
  containers:
    - args:
        - |
          echo "main container 1 is starting..."
          while true; do
            echo "main container 1 is doing some tasks..."
            sleep 3
          done
      command:
        - sh
        - -c
      image: busybox:1.35
      imagePullPolicy: IfNotPresent
      name: main-container-1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-kgcf9
          readOnly: true
    - args:
        - |
          echo "main container 2 is starting..."
          while true; do
            echo "main container 2 is doing some tasks..."
            sleep 3
          done
      command:
        - sh
        - -c
      image: busybox:1.35
      imagePullPolicy: IfNotPresent
      name: main-container-2
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-kgcf9
          readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  initContainers:
    - args:
        - |
          echo "init container 1 is starting..."
          echo "init container 1 is doing some tasks..."
          sleep 10
          echo "init container 1 completed tasks and exited"
      command:
        - sh
        - -c
      image: busybox:1.35
      imagePullPolicy: IfNotPresent
      name: init-container-1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-kgcf9
          readOnly: true
    - args:
        - |
          echo "sidecar container 1 is starting..."
          echo "sidecar container 1 is doing some tasks..."
          sleep 20
          echo "sidecar container 1 completed tasks and exited"
      command:
        - sh
        - -c
      image: busybox:1.35
      imagePullPolicy: IfNotPresent
      name: sidecar-container-1
      resources: {}
      restartPolicy: Always
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-kgcf9
          readOnly: true
    - args:
        - |
          echo "sidecar container 2 is starting..."
          echo "sidecar container 2 is doing some tasks..."
          sleep 30
          echo "sidecar container 2 completed tasks and exited"
      command:
        - sh
        - -c
      image: busybox:1.35
      imagePullPolicy: IfNotPresent
      name: sidecar-container-2
      resources: {}
      restartPolicy: Always
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-kgcf9
          readOnly: true
  nodeName: sidecar-demo-cluster-control-plane
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 30
  tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
  volumes:
    - name: kube-api-access-kgcf9
      projected:
        defaultMode: 420
        sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
                - key: ca.crt
                  path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
                - fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
                  path: namespace
status:
  conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-05-28T23:46:29Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-05-28T23:46:30Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-05-28T23:46:30Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-05-28T23:46:16Z"
      status: "True"
      type: PodScheduled
  containerStatuses:
    - containerID: containerd://ae89e34d4b61b46736bb633467c2db415bbc280e4a0149aa11078b56ef92c7a9
      image: docker.io/library/busybox:1.35
      imageID: docker.io/library/busybox@sha256:469d6089bc898ead80a47dab258a127ffdae15342eab860be3be9ed2acdee33b
      lastState: {}
      name: main-container-1
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-05-28T23:46:29Z"
    - containerID: containerd://b466db1d9657efea2e29009c14da0d75b04ec123881c802728646f2e06949e87
      image: docker.io/library/busybox:1.35
      imageID: docker.io/library/busybox@sha256:469d6089bc898ead80a47dab258a127ffdae15342eab860be3be9ed2acdee33b
      lastState: {}
      name: main-container-2
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-05-28T23:46:29Z"
  hostIP: 172.19.0.2
  initContainerStatuses:
    - containerID: containerd://4bae1e77a0ea4477c1efc488a34fd066dd915fdbc3866cecfad0966336c941a1
      image: docker.io/library/busybox:1.35
      imageID: docker.io/library/busybox@sha256:469d6089bc898ead80a47dab258a127ffdae15342eab860be3be9ed2acdee33b
      lastState: {}
      name: init-container-1
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://4bae1e77a0ea4477c1efc488a34fd066dd915fdbc3866cecfad0966336c941a1
          exitCode: 0
          finishedAt: "2024-05-28T23:46:26Z"
          reason: Completed
          startedAt: "2024-05-28T23:46:16Z"
    - containerID: containerd://3a71b3d8b8f32916aa6bfee057d65e3449603b81e8001dc75eb5256800e13882
      image: docker.io/library/busybox:1.35
      imageID: docker.io/library/busybox@sha256:469d6089bc898ead80a47dab258a127ffdae15342eab860be3be9ed2acdee33b
      lastState: {}
      name: sidecar-container-1
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-05-28T23:46:27Z"
    - containerID: containerd://ec0861a00729f5f3eb6325bbfb2f01599e8a88d0a67d02fb35b09e6dab5de1b5
      image: docker.io/library/busybox:1.35
      imageID: docker.io/library/busybox@sha256:469d6089bc898ead80a47dab258a127ffdae15342eab860be3be9ed2acdee33b
      lastState: {}
      name: sidecar-container-2
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-05-28T23:46:28Z"
  phase: Running
  podIP: 10.244.0.13
  podIPs:
    - ip: 10.244.0.13
  qosClass: BestEffort
  startTime: "2024-05-28T23:46:16Z"

# myapp   3/4     Running           0          32s
# sidecar-container-1 exited
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"name":"myapp","namespace":"default"},"spec":{"containers":[{"args":["echo \"main container 1 is starting...\"\nwhile true; do\n  echo \"main container 1 is doing some tasks...\"\n  sleep 3\ndone\n"],"command":["sh","-c"],"image":"busybox:1.35","name":"main-container-1"},{"args":["echo \"main container 2 is starting...\"\nwhile true; do\n  echo \"main container 2 is doing some tasks...\"\n  sleep 3\ndone\n"],"command":["sh","-c"],"image":"busybox:1.35","name":"main-container-2"}],"initContainers":[{"args":["echo \"init container 1 is starting...\"\necho \"init container 1 is doing some tasks...\"\nsleep 10\necho \"init container 1 completed tasks and exited\"\n"],"command":["sh","-c"],"image":"busybox:1.35","name":"init-container-1"},{"args":["echo \"sidecar container 1 is starting...\"\necho \"sidecar container 1 is doing some tasks...\"\nsleep 20\necho \"sidecar container 1 completed tasks and exited\"\n"],"command":["sh","-c"],"image":"busybox:1.35","name":"sidecar-container-1","restartPolicy":"Always"},{"args":["echo \"sidecar container 2 is starting...\"\necho \"sidecar container 2 is doing some tasks...\"\nsleep 30\necho \"sidecar container 2 completed tasks and exited\"\n"],"command":["sh","-c"],"image":"busybox:1.35","name":"sidecar-container-2","restartPolicy":"Always"}]}}
  creationTimestamp: "2024-05-28T23:46:16Z"
  name: myapp
  namespace: default
  resourceVersion: "1218335"
  uid: ba31885d-3d8d-44f2-89f4-2b06ab3984d2
spec:
  containers:
    - args:
        - |
          echo "main container 1 is starting..."
          while true; do
            echo "main container 1 is doing some tasks..."
            sleep 3
          done
      command:
        - sh
        - -c
      image: busybox:1.35
      imagePullPolicy: IfNotPresent
      name: main-container-1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-kgcf9
          readOnly: true
    - args:
        - |
          echo "main container 2 is starting..."
          while true; do
            echo "main container 2 is doing some tasks..."
            sleep 3
          done
      command:
        - sh
        - -c
      image: busybox:1.35
      imagePullPolicy: IfNotPresent
      name: main-container-2
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-kgcf9
          readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  initContainers:
    - args:
        - |
          echo "init container 1 is starting..."
          echo "init container 1 is doing some tasks..."
          sleep 10
          echo "init container 1 completed tasks and exited"
      command:
        - sh
        - -c
      image: busybox:1.35
      imagePullPolicy: IfNotPresent
      name: init-container-1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-kgcf9
          readOnly: true
    - args:
        - |
          echo "sidecar container 1 is starting..."
          echo "sidecar container 1 is doing some tasks..."
          sleep 20
          echo "sidecar container 1 completed tasks and exited"
      command:
        - sh
        - -c
      image: busybox:1.35
      imagePullPolicy: IfNotPresent
      name: sidecar-container-1
      resources: {}
      restartPolicy: Always
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-kgcf9
          readOnly: true
    - args:
        - |
          echo "sidecar container 2 is starting..."
          echo "sidecar container 2 is doing some tasks..."
          sleep 30
          echo "sidecar container 2 completed tasks and exited"
      command:
        - sh
        - -c
      image: busybox:1.35
      imagePullPolicy: IfNotPresent
      name: sidecar-container-2
      resources: {}
      restartPolicy: Always
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-kgcf9
          readOnly: true
  nodeName: sidecar-demo-cluster-control-plane
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 30
  tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
  volumes:
    - name: kube-api-access-kgcf9
      projected:
        defaultMode: 420
        sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
                - key: ca.crt
                  path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
                - fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
                  path: namespace
status:
  conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-05-28T23:46:29Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-05-28T23:46:48Z"
      message: 'containers with unready status: [sidecar-container-1]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-05-28T23:46:48Z"
      message: 'containers with unready status: [sidecar-container-1]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-05-28T23:46:16Z"
      status: "True"
      type: PodScheduled
  containerStatuses:
    - containerID: containerd://ae89e34d4b61b46736bb633467c2db415bbc280e4a0149aa11078b56ef92c7a9
      image: docker.io/library/busybox:1.35
      imageID: docker.io/library/busybox@sha256:469d6089bc898ead80a47dab258a127ffdae15342eab860be3be9ed2acdee33b
      lastState: {}
      name: main-container-1
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-05-28T23:46:29Z"
    - containerID: containerd://b466db1d9657efea2e29009c14da0d75b04ec123881c802728646f2e06949e87
      image: docker.io/library/busybox:1.35
      imageID: docker.io/library/busybox@sha256:469d6089bc898ead80a47dab258a127ffdae15342eab860be3be9ed2acdee33b
      lastState: {}
      name: main-container-2
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-05-28T23:46:29Z"
  hostIP: 172.19.0.2
  initContainerStatuses:
    - containerID: containerd://4bae1e77a0ea4477c1efc488a34fd066dd915fdbc3866cecfad0966336c941a1
      image: docker.io/library/busybox:1.35
      imageID: docker.io/library/busybox@sha256:469d6089bc898ead80a47dab258a127ffdae15342eab860be3be9ed2acdee33b
      lastState: {}
      name: init-container-1
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://4bae1e77a0ea4477c1efc488a34fd066dd915fdbc3866cecfad0966336c941a1
          exitCode: 0
          finishedAt: "2024-05-28T23:46:26Z"
          reason: Completed
          startedAt: "2024-05-28T23:46:16Z"
    - containerID: containerd://3a71b3d8b8f32916aa6bfee057d65e3449603b81e8001dc75eb5256800e13882
      image: docker.io/library/busybox:1.35
      imageID: docker.io/library/busybox@sha256:469d6089bc898ead80a47dab258a127ffdae15342eab860be3be9ed2acdee33b
      lastState: {}
      name: sidecar-container-1
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://3a71b3d8b8f32916aa6bfee057d65e3449603b81e8001dc75eb5256800e13882
          exitCode: 0
          finishedAt: "2024-05-28T23:46:47Z"
          reason: Completed
          startedAt: "2024-05-28T23:46:27Z"
    - containerID: containerd://ec0861a00729f5f3eb6325bbfb2f01599e8a88d0a67d02fb35b09e6dab5de1b5
      image: docker.io/library/busybox:1.35
      imageID: docker.io/library/busybox@sha256:469d6089bc898ead80a47dab258a127ffdae15342eab860be3be9ed2acdee33b
      lastState: {}
      name: sidecar-container-2
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-05-28T23:46:28Z"
  phase: Running
  podIP: 10.244.0.13
  podIPs:
    - ip: 10.244.0.13
  qosClass: BestEffort
  startTime: "2024-05-28T23:46:16Z"

# myapp   4/4     Running           1 (2s ago)   33s
# kubelet restarted sidecar-container-1
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"name":"myapp","namespace":"default"},"spec":{"containers":[{"args":["echo \"main container 1 is starting...\"\nwhile true; do\n  echo \"main container 1 is doing some tasks...\"\n  sleep 3\ndone\n"],"command":["sh","-c"],"image":"busybox:1.35","name":"main-container-1"},{"args":["echo \"main container 2 is starting...\"\nwhile true; do\n  echo \"main container 2 is doing some tasks...\"\n  sleep 3\ndone\n"],"command":["sh","-c"],"image":"busybox:1.35","name":"main-container-2"}],"initContainers":[{"args":["echo \"init container 1 is starting...\"\necho \"init container 1 is doing some tasks...\"\nsleep 10\necho \"init container 1 completed tasks and exited\"\n"],"command":["sh","-c"],"image":"busybox:1.35","name":"init-container-1"},{"args":["echo \"sidecar container 1 is starting...\"\necho \"sidecar container 1 is doing some tasks...\"\nsleep 20\necho \"sidecar container 1 completed tasks and exited\"\n"],"command":["sh","-c"],"image":"busybox:1.35","name":"sidecar-container-1","restartPolicy":"Always"},{"args":["echo \"sidecar container 2 is starting...\"\necho \"sidecar container 2 is doing some tasks...\"\nsleep 30\necho \"sidecar container 2 completed tasks and exited\"\n"],"command":["sh","-c"],"image":"busybox:1.35","name":"sidecar-container-2","restartPolicy":"Always"}]}}
  creationTimestamp: "2024-05-28T23:46:16Z"
  name: myapp
  namespace: default
  resourceVersion: "1218338"
  uid: ba31885d-3d8d-44f2-89f4-2b06ab3984d2
spec:
  containers:
    - args:
        - |
          echo "main container 1 is starting..."
          while true; do
            echo "main container 1 is doing some tasks..."
            sleep 3
          done
      command:
        - sh
        - -c
      image: busybox:1.35
      imagePullPolicy: IfNotPresent
      name: main-container-1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-kgcf9
          readOnly: true
    - args:
        - |
          echo "main container 2 is starting..."
          while true; do
            echo "main container 2 is doing some tasks..."
            sleep 3
          done
      command:
        - sh
        - -c
      image: busybox:1.35
      imagePullPolicy: IfNotPresent
      name: main-container-2
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-kgcf9
          readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  initContainers:
    - args:
        - |
          echo "init container 1 is starting..."
          echo "init container 1 is doing some tasks..."
          sleep 10
          echo "init container 1 completed tasks and exited"
      command:
        - sh
        - -c
      image: busybox:1.35
      imagePullPolicy: IfNotPresent
      name: init-container-1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-kgcf9
          readOnly: true
    - args:
        - |
          echo "sidecar container 1 is starting..."
          echo "sidecar container 1 is doing some tasks..."
          sleep 20
          echo "sidecar container 1 completed tasks and exited"
      command:
        - sh
        - -c
      image: busybox:1.35
      imagePullPolicy: IfNotPresent
      name: sidecar-container-1
      resources: {}
      restartPolicy: Always
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-kgcf9
          readOnly: true
    - args:
        - |
          echo "sidecar container 2 is starting..."
          echo "sidecar container 2 is doing some tasks..."
          sleep 30
          echo "sidecar container 2 completed tasks and exited"
      command:
        - sh
        - -c
      image: busybox:1.35
      imagePullPolicy: IfNotPresent
      name: sidecar-container-2
      resources: {}
      restartPolicy: Always
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-kgcf9
          readOnly: true
  nodeName: sidecar-demo-cluster-control-plane
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 30
  tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
  volumes:
    - name: kube-api-access-kgcf9
      projected:
        defaultMode: 420
        sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
                - key: ca.crt
                  path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
                - fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
                  path: namespace
status:
  conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-05-28T23:46:29Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-05-28T23:46:49Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-05-28T23:46:49Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-05-28T23:46:16Z"
      status: "True"
      type: PodScheduled
  containerStatuses:
    - containerID: containerd://ae89e34d4b61b46736bb633467c2db415bbc280e4a0149aa11078b56ef92c7a9
      image: docker.io/library/busybox:1.35
      imageID: docker.io/library/busybox@sha256:469d6089bc898ead80a47dab258a127ffdae15342eab860be3be9ed2acdee33b
      lastState: {}
      name: main-container-1
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-05-28T23:46:29Z"
    - containerID: containerd://b466db1d9657efea2e29009c14da0d75b04ec123881c802728646f2e06949e87
      image: docker.io/library/busybox:1.35
      imageID: docker.io/library/busybox@sha256:469d6089bc898ead80a47dab258a127ffdae15342eab860be3be9ed2acdee33b
      lastState: {}
      name: main-container-2
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-05-28T23:46:29Z"
  hostIP: 172.19.0.2
  initContainerStatuses:
    - containerID: containerd://4bae1e77a0ea4477c1efc488a34fd066dd915fdbc3866cecfad0966336c941a1
      image: docker.io/library/busybox:1.35
      imageID: docker.io/library/busybox@sha256:469d6089bc898ead80a47dab258a127ffdae15342eab860be3be9ed2acdee33b
      lastState: {}
      name: init-container-1
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://4bae1e77a0ea4477c1efc488a34fd066dd915fdbc3866cecfad0966336c941a1
          exitCode: 0
          finishedAt: "2024-05-28T23:46:26Z"
          reason: Completed
          startedAt: "2024-05-28T23:46:16Z"
    - containerID: containerd://457268e465da06c8192444fff0a815a2a8fdb8868161c2239410add69675c0d7
      image: docker.io/library/busybox:1.35
      imageID: docker.io/library/busybox@sha256:469d6089bc898ead80a47dab258a127ffdae15342eab860be3be9ed2acdee33b
      lastState:
        terminated:
          containerID: containerd://3a71b3d8b8f32916aa6bfee057d65e3449603b81e8001dc75eb5256800e13882
          exitCode: 0
          finishedAt: "2024-05-28T23:46:47Z"
          reason: Completed
          startedAt: "2024-05-28T23:46:27Z"
      name: sidecar-container-1
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2024-05-28T23:46:48Z"
    - containerID: containerd://ec0861a00729f5f3eb6325bbfb2f01599e8a88d0a67d02fb35b09e6dab5de1b5
      image: docker.io/library/busybox:1.35
      imageID: docker.io/library/busybox@sha256:469d6089bc898ead80a47dab258a127ffdae15342eab860be3be9ed2acdee33b
      lastState: {}
      name: sidecar-container-2
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-05-28T23:46:28Z"
  phase: Running
  podIP: 10.244.0.13
  podIPs:
    - ip: 10.244.0.13
  qosClass: BestEffort
  startTime: "2024-05-28T23:46:16Z"

# myapp   3/4     Running           1 (11s ago)   42s
# sidecar-container-2 exited
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"name":"myapp","namespace":"default"},"spec":{"containers":[{"args":["echo \"main container 1 is starting...\"\nwhile true; do\n  echo \"main container 1 is doing some tasks...\"\n  sleep 3\ndone\n"],"command":["sh","-c"],"image":"busybox:1.35","name":"main-container-1"},{"args":["echo \"main container 2 is starting...\"\nwhile true; do\n  echo \"main container 2 is doing some tasks...\"\n  sleep 3\ndone\n"],"command":["sh","-c"],"image":"busybox:1.35","name":"main-container-2"}],"initContainers":[{"args":["echo \"init container 1 is starting...\"\necho \"init container 1 is doing some tasks...\"\nsleep 10\necho \"init container 1 completed tasks and exited\"\n"],"command":["sh","-c"],"image":"busybox:1.35","name":"init-container-1"},{"args":["echo \"sidecar container 1 is starting...\"\necho \"sidecar container 1 is doing some tasks...\"\nsleep 20\necho \"sidecar container 1 completed tasks and exited\"\n"],"command":["sh","-c"],"image":"busybox:1.35","name":"sidecar-container-1","restartPolicy":"Always"},{"args":["echo \"sidecar container 2 is starting...\"\necho \"sidecar container 2 is doing some tasks...\"\nsleep 30\necho \"sidecar container 2 completed tasks and exited\"\n"],"command":["sh","-c"],"image":"busybox:1.35","name":"sidecar-container-2","restartPolicy":"Always"}]}}
  creationTimestamp: "2024-05-28T23:46:16Z"
  name: myapp
  namespace: default
  resourceVersion: "1218353"
  uid: ba31885d-3d8d-44f2-89f4-2b06ab3984d2
spec:
  containers:
    - args:
        - |
          echo "main container 1 is starting..."
          while true; do
            echo "main container 1 is doing some tasks..."
            sleep 3
          done
      command:
        - sh
        - -c
      image: busybox:1.35
      imagePullPolicy: IfNotPresent
      name: main-container-1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-kgcf9
          readOnly: true
    - args:
        - |
          echo "main container 2 is starting..."
          while true; do
            echo "main container 2 is doing some tasks..."
            sleep 3
          done
      command:
        - sh
        - -c
      image: busybox:1.35
      imagePullPolicy: IfNotPresent
      name: main-container-2
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-kgcf9
          readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  initContainers:
    - args:
        - |
          echo "init container 1 is starting..."
          echo "init container 1 is doing some tasks..."
          sleep 10
          echo "init container 1 completed tasks and exited"
      command:
        - sh
        - -c
      image: busybox:1.35
      imagePullPolicy: IfNotPresent
      name: init-container-1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-kgcf9
          readOnly: true
    - args:
        - |
          echo "sidecar container 1 is starting..."
          echo "sidecar container 1 is doing some tasks..."
          sleep 20
          echo "sidecar container 1 completed tasks and exited"
      command:
        - sh
        - -c
      image: busybox:1.35
      imagePullPolicy: IfNotPresent
      name: sidecar-container-1
      resources: {}
      restartPolicy: Always
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-kgcf9
          readOnly: true
    - args:
        - |
          echo "sidecar container 2 is starting..."
          echo "sidecar container 2 is doing some tasks..."
          sleep 30
          echo "sidecar container 2 completed tasks and exited"
      command:
        - sh
        - -c
      image: busybox:1.35
      imagePullPolicy: IfNotPresent
      name: sidecar-container-2
      resources: {}
      restartPolicy: Always
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-kgcf9
          readOnly: true
  nodeName: sidecar-demo-cluster-control-plane
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 30
  tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
  volumes:
    - name: kube-api-access-kgcf9
      projected:
        defaultMode: 420
        sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
                - key: ca.crt
                  path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
                - fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
                  path: namespace
status:
  conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-05-28T23:46:29Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-05-28T23:46:58Z"
      message: 'containers with unready status: [sidecar-container-2]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-05-28T23:46:58Z"
      message: 'containers with unready status: [sidecar-container-2]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-05-28T23:46:16Z"
      status: "True"
      type: PodScheduled
  containerStatuses:
    - containerID: containerd://ae89e34d4b61b46736bb633467c2db415bbc280e4a0149aa11078b56ef92c7a9
      image: docker.io/library/busybox:1.35
      imageID: docker.io/library/busybox@sha256:469d6089bc898ead80a47dab258a127ffdae15342eab860be3be9ed2acdee33b
      lastState: {}
      name: main-container-1
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-05-28T23:46:29Z"
    - containerID: containerd://b466db1d9657efea2e29009c14da0d75b04ec123881c802728646f2e06949e87
      image: docker.io/library/busybox:1.35
      imageID: docker.io/library/busybox@sha256:469d6089bc898ead80a47dab258a127ffdae15342eab860be3be9ed2acdee33b
      lastState: {}
      name: main-container-2
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-05-28T23:46:29Z"
  hostIP: 172.19.0.2
  initContainerStatuses:
    - containerID: containerd://4bae1e77a0ea4477c1efc488a34fd066dd915fdbc3866cecfad0966336c941a1
      image: docker.io/library/busybox:1.35
      imageID: docker.io/library/busybox@sha256:469d6089bc898ead80a47dab258a127ffdae15342eab860be3be9ed2acdee33b
      lastState: {}
      name: init-container-1
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://4bae1e77a0ea4477c1efc488a34fd066dd915fdbc3866cecfad0966336c941a1
          exitCode: 0
          finishedAt: "2024-05-28T23:46:26Z"
          reason: Completed
          startedAt: "2024-05-28T23:46:16Z"
    - containerID: containerd://457268e465da06c8192444fff0a815a2a8fdb8868161c2239410add69675c0d7
      image: docker.io/library/busybox:1.35
      imageID: docker.io/library/busybox@sha256:469d6089bc898ead80a47dab258a127ffdae15342eab860be3be9ed2acdee33b
      lastState:
        terminated:
          containerID: containerd://3a71b3d8b8f32916aa6bfee057d65e3449603b81e8001dc75eb5256800e13882
          exitCode: 0
          finishedAt: "2024-05-28T23:46:47Z"
          reason: Completed
          startedAt: "2024-05-28T23:46:27Z"
      name: sidecar-container-1
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2024-05-28T23:46:48Z"
    - containerID: containerd://ec0861a00729f5f3eb6325bbfb2f01599e8a88d0a67d02fb35b09e6dab5de1b5
      image: docker.io/library/busybox:1.35
      imageID: docker.io/library/busybox@sha256:469d6089bc898ead80a47dab258a127ffdae15342eab860be3be9ed2acdee33b
      lastState: {}
      name: sidecar-container-2
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://ec0861a00729f5f3eb6325bbfb2f01599e8a88d0a67d02fb35b09e6dab5de1b5
          exitCode: 0
          finishedAt: "2024-05-28T23:46:58Z"
          reason: Completed
          startedAt: "2024-05-28T23:46:28Z"
  phase: Running
  podIP: 10.244.0.13
  podIPs:
    - ip: 10.244.0.13
  qosClass: BestEffort
  startTime: "2024-05-28T23:46:16Z"

# myapp   4/4     Running           2 (1s ago)    43s
# kubelet restarted sidecar-container-2
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"name":"myapp","namespace":"default"},"spec":{"containers":[{"args":["echo \"main container 1 is starting...\"\nwhile true; do\n  echo \"main container 1 is doing some tasks...\"\n  sleep 3\ndone\n"],"command":["sh","-c"],"image":"busybox:1.35","name":"main-container-1"},{"args":["echo \"main container 2 is starting...\"\nwhile true; do\n  echo \"main container 2 is doing some tasks...\"\n  sleep 3\ndone\n"],"command":["sh","-c"],"image":"busybox:1.35","name":"main-container-2"}],"initContainers":[{"args":["echo \"init container 1 is starting...\"\necho \"init container 1 is doing some tasks...\"\nsleep 10\necho \"init container 1 completed tasks and exited\"\n"],"command":["sh","-c"],"image":"busybox:1.35","name":"init-container-1"},{"args":["echo \"sidecar container 1 is starting...\"\necho \"sidecar container 1 is doing some tasks...\"\nsleep 20\necho \"sidecar container 1 completed tasks and exited\"\n"],"command":["sh","-c"],"image":"busybox:1.35","name":"sidecar-container-1","restartPolicy":"Always"},{"args":["echo \"sidecar container 2 is starting...\"\necho \"sidecar container 2 is doing some tasks...\"\nsleep 30\necho \"sidecar container 2 completed tasks and exited\"\n"],"command":["sh","-c"],"image":"busybox:1.35","name":"sidecar-container-2","restartPolicy":"Always"}]}}
  creationTimestamp: "2024-05-28T23:46:16Z"
  name: myapp
  namespace: default
  resourceVersion: "1218356"
  uid: ba31885d-3d8d-44f2-89f4-2b06ab3984d2
spec:
  containers:
    - args:
        - |
          echo "main container 1 is starting..."
          while true; do
            echo "main container 1 is doing some tasks..."
            sleep 3
          done
      command:
        - sh
        - -c
      image: busybox:1.35
      imagePullPolicy: IfNotPresent
      name: main-container-1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-kgcf9
          readOnly: true
    - args:
        - |
          echo "main container 2 is starting..."
          while true; do
            echo "main container 2 is doing some tasks..."
            sleep 3
          done
      command:
        - sh
        - -c
      image: busybox:1.35
      imagePullPolicy: IfNotPresent
      name: main-container-2
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-kgcf9
          readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  initContainers:
    - args:
        - |
          echo "init container 1 is starting..."
          echo "init container 1 is doing some tasks..."
          sleep 10
          echo "init container 1 completed tasks and exited"
      command:
        - sh
        - -c
      image: busybox:1.35
      imagePullPolicy: IfNotPresent
      name: init-container-1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-kgcf9
          readOnly: true
    - args:
        - |
          echo "sidecar container 1 is starting..."
          echo "sidecar container 1 is doing some tasks..."
          sleep 20
          echo "sidecar container 1 completed tasks and exited"
      command:
        - sh
        - -c
      image: busybox:1.35
      imagePullPolicy: IfNotPresent
      name: sidecar-container-1
      resources: {}
      restartPolicy: Always
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-kgcf9
          readOnly: true
    - args:
        - |
          echo "sidecar container 2 is starting..."
          echo "sidecar container 2 is doing some tasks..."
          sleep 30
          echo "sidecar container 2 completed tasks and exited"
      command:
        - sh
        - -c
      image: busybox:1.35
      imagePullPolicy: IfNotPresent
      name: sidecar-container-2
      resources: {}
      restartPolicy: Always
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-kgcf9
          readOnly: true
  nodeName: sidecar-demo-cluster-control-plane
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 30
  tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
  volumes:
    - name: kube-api-access-kgcf9
      projected:
        defaultMode: 420
        sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
                - key: ca.crt
                  path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
                - fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
                  path: namespace
status:
  conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-05-28T23:46:29Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-05-28T23:46:59Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-05-28T23:46:59Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-05-28T23:46:16Z"
      status: "True"
      type: PodScheduled
  containerStatuses:
    - containerID: containerd://ae89e34d4b61b46736bb633467c2db415bbc280e4a0149aa11078b56ef92c7a9
      image: docker.io/library/busybox:1.35
      imageID: docker.io/library/busybox@sha256:469d6089bc898ead80a47dab258a127ffdae15342eab860be3be9ed2acdee33b
      lastState: {}
      name: main-container-1
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-05-28T23:46:29Z"
    - containerID: containerd://b466db1d9657efea2e29009c14da0d75b04ec123881c802728646f2e06949e87
      image: docker.io/library/busybox:1.35
      imageID: docker.io/library/busybox@sha256:469d6089bc898ead80a47dab258a127ffdae15342eab860be3be9ed2acdee33b
      lastState: {}
      name: main-container-2
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-05-28T23:46:29Z"
  hostIP: 172.19.0.2
  initContainerStatuses:
    - containerID: containerd://4bae1e77a0ea4477c1efc488a34fd066dd915fdbc3866cecfad0966336c941a1
      image: docker.io/library/busybox:1.35
      imageID: docker.io/library/busybox@sha256:469d6089bc898ead80a47dab258a127ffdae15342eab860be3be9ed2acdee33b
      lastState: {}
      name: init-container-1
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://4bae1e77a0ea4477c1efc488a34fd066dd915fdbc3866cecfad0966336c941a1
          exitCode: 0
          finishedAt: "2024-05-28T23:46:26Z"
          reason: Completed
          startedAt: "2024-05-28T23:46:16Z"
    - containerID: containerd://457268e465da06c8192444fff0a815a2a8fdb8868161c2239410add69675c0d7
      image: docker.io/library/busybox:1.35
      imageID: docker.io/library/busybox@sha256:469d6089bc898ead80a47dab258a127ffdae15342eab860be3be9ed2acdee33b
      lastState:
        terminated:
          containerID: containerd://3a71b3d8b8f32916aa6bfee057d65e3449603b81e8001dc75eb5256800e13882
          exitCode: 0
          finishedAt: "2024-05-28T23:46:47Z"
          reason: Completed
          startedAt: "2024-05-28T23:46:27Z"
      name: sidecar-container-1
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2024-05-28T23:46:48Z"
    - containerID: containerd://54709f758e4bb20400662bada8de37dcd6d6f6cb58996623c6cc30cfaefd7011
      image: docker.io/library/busybox:1.35
      imageID: docker.io/library/busybox@sha256:469d6089bc898ead80a47dab258a127ffdae15342eab860be3be9ed2acdee33b
      lastState:
        terminated:
          containerID: containerd://ec0861a00729f5f3eb6325bbfb2f01599e8a88d0a67d02fb35b09e6dab5de1b5
          exitCode: 0
          finishedAt: "2024-05-28T23:46:58Z"
          reason: Completed
          startedAt: "2024-05-28T23:46:28Z"
      name: sidecar-container-2
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2024-05-28T23:46:58Z"
  phase: Running
  podIP: 10.244.0.13
  podIPs:
    - ip: 10.244.0.13
  qosClass: BestEffort
  startTime: "2024-05-28T23:46:16Z"
